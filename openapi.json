{
  "openapi": "3.0.0",
  "info": { "title": "ScrapIn API", "version": "1.1.0" },
  "servers": [{ "url": "https://api.scrapin.io" }],
  "security": [{ "apiKey": [] }],
  "tags": [
    { "name": "Person" },
    { "name": "Company" },
    { "name": "Job" },
    { "name": "Workspaces" }
  ],
  "paths": {
    "/enrichment": {
      "get": {
        "tags": ["Person"],
        "operationId": "PersonSearch",
        "summary": "Person Search",
        "description": "This operation allows you to find a Profile based on first name, last name, company domain or email. It returns data profile and company information as the response. This operation consumes 1 credit.",
        "parameters": [
          {
            "name": "firstName",
            "in": "query",
            "schema": { "type": "string" },
            "description": "This optional parameter is a string. It represents the first name to query."
          },
          {
            "name": "lastName",
            "in": "query",
            "schema": { "type": "string" },
            "description": "This optional parameter is a string. It represents the last name to query."
          },
          {
            "name": "companyDomain",
            "in": "query",
            "schema": { "type": "string" },
            "description": "This optional parameter is a string. It represents the company domain/URL to query"
          },
          {
            "name": "companyName",
            "in": "query",
            "schema": { "type": "string" },
            "description": "This optional parameter is a string. It represents the company name to query"
          },
          {
            "name": "email",
            "in": "query",
            "schema": { "type": "string" },
            "description": "This required parameter is a string. It represents the email to query."
          }
        ],
        "responses": {
          "200": {
            "description": "The endpoint returns profile information.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileSearchResponseV0"
                },
                "examples": {
                  "ProfileFound": {
                    "$ref": "#/components/examples/ProfileSearchFoundV0"
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "402": { "$ref": "#/components/responses/PaymentRequired" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "500": { "$ref": "#/components/responses/ServerError" }
        }
      }
    },
    "/v1/enrichment/profile": {
      "get": {
        "tags": ["Person"],
        "operationId": "GetProfileData",
        "summary": "Get Profile Data",
        "description": "This operation allows you to get profile data from an url. It returns profile data with credits and rate limit information. This operation consumes 1 credit.",
        "parameters": [
          {
            "name": "linkedInUrl",
            "in": "query",
            "schema": { "type": "string" },
            "description": "This required parameter is a string. It represents the Social URL of the person with this format: https://www.social.com/in/xxxxxxxxxxxxx/.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The endpoint returns profile information.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileResponse"
                },
                "examples": {
                  "ProfileFound": {
                    "$ref": "#/components/examples/ProfileFound"
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "402": { "$ref": "#/components/responses/PaymentRequired" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "500": { "$ref": "#/components/responses/ServerError" }
        }
      },
      "post": {
        "tags": ["Person"],
        "operationId": "GetProfileData",
        "summary": "Get Profile Data",
        "description": "This operation allows you to get profile data from an url. It returns profile data with credits and rate limit information. This operation consumes 1 credit.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "linkedInUrl": {
                    "type": "string",
                    "description": "This required parameter is a string. It represents the Social URL of the person with this format: https://www.social.com/in/xxxxxxxxxxxxx/."
                  },
                  "includes": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "This required parameter is an object. It specifies which additional data to include in the response.",
                    "properties": {
                      "includeCompany": {
                        "type": "boolean",
                        "description": "Include company information in the response."
                      },
                      "includeSummary": {
                        "type": "boolean",
                        "description": "Include summary information in the response."
                      },
                      "includeFollowersCount": {
                        "type": "boolean",
                        "description": "Include followers count in the response."
                      },
                      "includeCreationDate": {
                        "type": "boolean",
                        "description": "Include creation date in the response."
                      },
                      "includeSkills": {
                        "type": "boolean",
                        "description": "Include skills information in the response."
                      },
                      "includeLanguages": {
                        "type": "boolean",
                        "description": "Include languages information in the response."
                      },
                      "includeExperience": {
                        "type": "boolean",
                        "description": "Include experience information in the response."
                      },
                      "includeEducation": {
                        "type": "boolean",
                        "description": "Include education and schools information in the response."
                      },
                      "includeCertifications": {
                        "type": "boolean",
                        "description": "Include certifications in the response."
                      }
                    }
                  }
                },
                "required": ["linkedInUrl", "includes"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The endpoint returns profile information.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileResponseV1"
                },
                "examples": {
                  "ProfileFound": {
                    "$ref": "#/components/examples/ProfileFoundV1"
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "402": { "$ref": "#/components/responses/PaymentRequired" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "500": { "$ref": "#/components/responses/ServerError" }
        }
      }
    },
    "/v1/enrichment/resolve/email": {
      "get": {
        "tags": ["Person"],
        "operationId": "GetProfileDataFromEmail",
        "summary": "Get Profile Data From Email Address",
        "description": "This operation allows you to get profile data from email address. It returns profile data with credits and rate limit information. This operation consumes 5 credit.",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "schema": { "type": "string" },
            "description": "This required parameter is a string. It represents the email to query.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The endpoint returns profile information.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileResponse"
                },
                "examples": {
                  "ProfileFound": {
                    "$ref": "#/components/examples/ProfileFound"
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "402": { "$ref": "#/components/responses/PaymentRequired" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "500": { "$ref": "#/components/responses/ServerError" }
        }
      }
    },
    "/v1/enrichment/match": {
      "post": {
        "tags": ["Person"],
        "operationId": "MatchProfile",
        "summary": "Match Profile",
        "description": "This operation allows you to match a single person profile from various parameters. It returns profile data with credits and rate limit information. This operation consumes 1 credit.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "description": "This optional parameter is a string. It represents the first name to body."
                  },
                  "lastName": {
                    "type": "string",
                    "description": "This optional parameter is a string. It represents the last name to body."
                  },
                  "companyDomain": {
                    "type": "string",
                    "description": "This optional parameter is a string. It represents the company domain/URL to body. *You can use current or any previous company to that person."
                  },
                  "companyName": {
                    "type": "string",
                    "description": "This optional parameter is a string. It represents the company name to body. *You can use current or any previous company to that person."
                  },
                  "email": {
                    "type": "string",
                    "description": "This optional parameter is a string. It represents the email to body."
                  },
                  "includes": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "This required parameter is an object. It specifies which additional data to include in the response.",
                    "properties": {
                      "includeCompany": {
                        "type": "boolean",
                        "description": "Include company information in the response."
                      },
                      "includeSummary": {
                        "type": "boolean",
                        "description": "Include summary information in the response."
                      },
                      "includeFollowersCount": {
                        "type": "boolean",
                        "description": "Include followers count in the response."
                      },
                      "includeCreationDate": {
                        "type": "boolean",
                        "description": "Include creation date in the response."
                      },
                      "includeSkills": {
                        "type": "boolean",
                        "description": "Include skills information in the response."
                      },
                      "includeLanguages": {
                        "type": "boolean",
                        "description": "Include languages information in the response."
                      },
                      "includeExperience": {
                        "type": "boolean",
                        "description": "Include experience information in the response."
                      },
                      "includeEducation": {
                        "type": "boolean",
                        "description": "Include education and schools information in the response."
                      },
                      "includeCertifications": {
                        "type": "boolean",
                        "description": "Include certifications in the response."
                      }
                    }
                  }
                },
                "required": ["includes"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The endpoint returns profile information.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileResponseV1"
                },
                "examples": {
                  "ProfileFound": {
                    "$ref": "#/components/examples/ProfileFoundV1"
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "402": { "$ref": "#/components/responses/PaymentRequired" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "500": { "$ref": "#/components/responses/ServerError" }
        }
      }
    },
    "/v1/enrichment/volunteering-experiences": {
      "get": {
        "tags": ["Person"],
        "operationId": "GetVolunteeringExperiences",
        "summary": "Get Volunteering Experiences",
        "description": "This operation allows you to get volunteering experiences data from a profile. It returns volunteering experiences information with credits and rate limit information. This operation consumes 1 credit.",
        "parameters": [
          {
            "name": "linkedInUrl",
            "in": "query",
            "schema": { "type": "string" },
            "description": "This required parameter is a string. It represents the Social URL of the person with this format: https://www.social.com/in/xxxxxxxxxxxxx/.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The endpoint returns volunteering experiences information.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VolunteeringExperiencesResponse"
                },
                "examples": {
                  "VolunteeringExperiencesFound": {
                    "$ref": "#/components/examples/VolunteeringExperiencesFound"
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "402": { "$ref": "#/components/responses/PaymentRequired" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "500": { "$ref": "#/components/responses/ServerError" }
        }
      }
    },
    "/v1/enrichment/company/domain": {
      "get": {
        "tags": ["Company"],
        "operationId": "CompanySearch",
        "summary": "Company Search",
        "description": "This operation allows you to find a company from its domain name. It returns company information as the response. This operation consumes 1 credit.",
        "parameters": [
          {
            "name": "domain",
            "in": "query",
            "schema": { "type": "string" },
            "description": "This required parameter is a string. It represents the domain name of the company to query.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The endpoint returns information about the company.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySearch"
                },
                "examples": {
                  "CompanyFound": {
                    "$ref": "#/components/examples/CompanyFound"
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "402": { "$ref": "#/components/responses/PaymentRequired" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "500": { "$ref": "#/components/responses/ServerError" }
        }
      }
    },
    "/v1/enrichment/company": {
      "get": {
        "tags": ["Company"],
        "operationId": "ExtractCompanyDataProfile",
        "summary": "Extract Company Data Profile",
        "description": "This operation allows you to extract data from a Company URL. It returns company data as the response. This operation consumes 1 credit.",
        "parameters": [
          {
            "name": "linkedInUrl",
            "in": "query",
            "schema": { "type": "string" },
            "description": "This required parameter is a string. It represents the Social URL of the company with this format: https://www.social.com/company/xxxxxxxxxx/.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The endpoint returns information about the company.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtractCompanyDataProfile"
                },
                "examples": {
                  "CompanyFound": {
                    "$ref": "#/components/examples/CompanyProfileExtracted"
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "402": { "$ref": "#/components/responses/PaymentRequired" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "500": { "$ref": "#/components/responses/ServerError" }
        }
      }
    },
    "/v1/enrichment/jobs/search": {
      "get": {
        "tags": ["Job"],
        "operationId": "JobSearch",
        "summary": "Extract Job Search Data",
        "description": "This operation allows you to extract data from a Job Search by keywords, location and companyUrl filters. At least one of the input parameters is required. Pagination is limited to 10 pages, with a maximum of 50 items per page, allowing retrieval of up to 500 items. It returns a list of job data as the response. This operation consumes 1 credit.",
        "parameters": [
          {
            "name": "keywords",
            "in": "query",
            "schema": { "type": "string" },
            "description": "This required parameter is a string. It represents the keywords contained by the job title.",
            "required": false
          },
          {
            "name": "location",
            "in": "query",
            "schema": { "type": "string" },
            "description": "This required parameter is a string. It represents the location of the job. It can be the city, the region of the country name. \nSingle location string without separators or special characters. \nAllowed: letters, digits, spaces, and hyphens. \nExamples: \"France\", \"USA\", \"New York\", \"Saint-Etienne\". \nInvalid: \"USA; France\", \"Paris, France\", \"London;\".",
            "required": false
          },
          {
            "name": "companyUrl",
            "in": "query",
            "schema": { "type": "string" },
            "description": "This required parameter is a string. It represents the Social URL of the company with this format: https://www.social.com/company/xxxxxxxxxx/.",
            "required": false
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "enum": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
            },
            "description": "This optional parameter is a string. It represents the page number of the results."
          }
        ],
        "responses": {
          "200": {
            "description": "The endpoint returns a list of jobs.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/JobSearch" },
                "examples": {
                  "JobFound": {
                    "$ref": "#/components/examples/JobListExtracted"
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "402": { "$ref": "#/components/responses/PaymentRequired" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "500": { "$ref": "#/components/responses/ServerError" }
        }
      }
    },
    "/v1/enrichment/jobs/details": {
      "get": {
        "tags": ["Job"],
        "operationId": "ExtractJobData",
        "summary": "Extract Job Data",
        "description": "This operation allows you to extract data from a Job URL. It returns job data as the response. This operation consumes 1 credit.",
        "parameters": [
          {
            "name": "url",
            "in": "query",
            "schema": { "type": "string" },
            "description": "This required parameter is a string. It represents the Social URL of the job with the following formats: https://www.social.com/jobs/collections/recommended/?currentJobId=XXXXXXXXXX, https://www.social.com/jobs/search/?currentJobId=XXXXXXXXXX or https://www.social.com/jobs/view/XXXXXXXXXX/.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The endpoint returns information about the job.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtractJobData"
                },
                "examples": {
                  "JobFound": {
                    "$ref": "#/components/examples/JobExtracted"
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "402": { "$ref": "#/components/responses/PaymentRequired" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "500": { "$ref": "#/components/responses/ServerError" }
        }
      }
    },
    "/v1/enrichment/persons/activities/post": {
      "get": {
        "tags": ["Person"],
        "operationId": "PersonsActivitiesPost",
        "summary": "Get Person Activities Post",
        "description": "This operation allows you to retrieve the activity post details of a person based on their activity post ID. This operation consumes 1 credit.",
        "parameters": [
          {
            "name": "activityId",
            "in": "query",
            "required": false,
            "schema": { "type": "string" },
            "description": "This parameter is a string. It represents the ID of the activity post you want to retrieve."
          },
          {
            "name": "postId",
            "in": "query",
            "required": false,
            "schema": { "type": "string" },
            "description": "This parameter is a string. It represents the ID of the post you want to retrieve."
          }
        ],
        "responses": {
          "200": {
            "description": "The endpoint returns the activity post from activityId or postId",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitiesPost"
                },
                "examples": {
                  "Activities Post Found": {
                    "$ref": "#/components/examples/ActivitiesPost"
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "402": { "$ref": "#/components/responses/PaymentRequired" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "500": { "$ref": "#/components/responses/ServerError" }
        }
      }
    },
    "/v1/enrichment/persons/activities/posts": {
      "get": {
        "tags": ["Person"],
        "operationId": "PersonsActivitiesPosts",
        "summary": "Get Person Activities Posts",
        "description": "This operation allows you to retrieve the last 50 activity posts of a person based on their Profile URL. This operation consumes 1 credit.",
        "parameters": [
          {
            "name": "linkedInUrl",
            "in": "query",
            "required": true,
            "schema": { "type": "string" },
            "description": "This required parameter is a string. It represents Profile URL you want to retrieve all activity posts."
          }
        ],
        "responses": {
          "200": {
            "description": "The endpoint returns the activity posts from the Profile URL",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitiesPosts"
                },
                "examples": {
                  "Activities Posts Found": {
                    "$ref": "#/components/examples/ActivitiesPosts"
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "402": { "$ref": "#/components/responses/PaymentRequired" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "500": { "$ref": "#/components/responses/ServerError" }
        }
      }
    },
    "/v1/enrichment/persons/activities/comments": {
      "get": {
        "tags": ["Person"],
        "operationId": "PersonsActivitiesComments",
        "summary": "Get Person Activities Comments",
        "description": "This operation allows you to retrieve the last 50 activity comments of a person based on their Profile URL. This operation consumes 1 credit.",
        "parameters": [
          {
            "name": "linkedInUrl",
            "in": "query",
            "required": true,
            "schema": { "type": "string" },
            "description": "This required parameter is a string. It represents the Profile URL you want to retrieve all activity comments."
          }
        ],
        "responses": {
          "200": {
            "description": "The endpoint returns the activity comments from the Profile URL",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitiesComments"
                },
                "examples": {
                  "Activities Comments Found": {
                    "$ref": "#/components/examples/ActivitiesComments"
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "402": { "$ref": "#/components/responses/PaymentRequired" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "500": { "$ref": "#/components/responses/ServerError" }
        }
      }
    },
    "/v1/enrichment/persons/activities/reactions": {
      "get": {
        "tags": ["Person"],
        "operationId": "PersonsActivitiesReactions",
        "summary": "Get Person Activities Reactions",
        "description": "This operation allows you to retrieve the last 50 activity reactions of a person based on their Profile URL. This operation consumes 1 credit.",
        "parameters": [
          {
            "name": "linkedInUrl",
            "in": "query",
            "required": true,
            "schema": { "type": "string" },
            "description": "This required parameter is a string. It represents the Profile URL you want to retrieve all activity reactions."
          }
        ],
        "responses": {
          "200": {
            "description": "The endpoint returns the activity reactions from the Profile URL",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitiesReactions"
                },
                "examples": {
                  "Activities Reactions Found": {
                    "$ref": "#/components/examples/ActivitiesReactions"
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "402": { "$ref": "#/components/responses/PaymentRequired" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "500": { "$ref": "#/components/responses/ServerError" }
        }
      }
    },
    "/v1/enrichment/persons/activities/post/comments": {
      "get": {
        "tags": ["Person"],
        "operationId": "PersonsActivitiesPostComments",
        "summary": "Get Person Activities Post Comments",
        "description": "This operation allows you to retrieve all comments on activity post of a person based on their activity post ID. Pagination is limited to 10 pages, with a maximum of 50 items per page, allowing retrieval of up to 500 items. This operation consumes 1 credit.",
        "parameters": [
          {
            "name": "activityId",
            "in": "query",
            "required": true,
            "schema": { "type": "string" },
            "description": "This required parameter is a string. It represents the ID of the activity post you want to retrieve comments."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": { "type": "number" },
            "description": "This optional parameter is a string. It represents the page number of the results."
          }
        ],
        "responses": {
          "200": {
            "description": "The endpoint returns the activity post comments from activityId",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitiesComment"
                },
                "examples": {
                  "Activities Post Comments Found": {
                    "$ref": "#/components/examples/ActivitiesComment"
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "402": { "$ref": "#/components/responses/PaymentRequired" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "500": { "$ref": "#/components/responses/ServerError" }
        }
      }
    },
    "/v1/enrichment/persons/activities/post/reactions": {
      "get": {
        "tags": ["Person"],
        "operationId": "PersonsActivitiesPostReactions",
        "summary": "Get Person Activities Post Reactions",
        "description": "This operation allows you to retrieve all reactions on activity post of a person based on their activity post ID. Pagination is limited to 10 pages, with a maximum of 50 items per page, allowing retrieval of up to 500 items. This operation consumes 1 credit.",
        "parameters": [
          {
            "name": "activityId",
            "in": "query",
            "required": true,
            "schema": { "type": "string" },
            "description": "This required parameter is a string. It represents the ID of the activity post you want to retrieve reactions."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": { "type": "number" },
            "description": "This optional parameter is a string. It represents the page number of the results."
          }
        ],
        "responses": {
          "200": {
            "description": "The endpoint returns the activity post reactions from activityId",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitiesReaction"
                },
                "examples": {
                  "Activities Post Reactions Found": {
                    "$ref": "#/components/examples/ActivitiesReaction"
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "402": { "$ref": "#/components/responses/PaymentRequired" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "500": { "$ref": "#/components/responses/ServerError" }
        }
      }
    },
    "/v1/enrichment/persons/activities/post/reposts": {
      "get": {
        "tags": ["Person"],
        "operationId": "PersonsActivitiesPostReposts",
        "summary": "Get Person Activities Post Reposts",
        "description": "This operation allows you to retrieve all reposts on activity post of a person based on their activity post ID. Pagination is limited to 10 pages, with a maximum of 50 items per page, allowing retrieval of up to 500 items. This operation consumes 1 credit.",
        "parameters": [
          {
            "name": "activityId",
            "in": "query",
            "required": true,
            "schema": { "type": "string" },
            "description": "This required parameter is a string. It represents the ID of the activity post you want to retrieve reposts."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": { "type": "number" },
            "description": "This optional parameter is a string. It represents the page number of the results."
          }
        ],
        "responses": {
          "200": {
            "description": "The endpoint returns the activity post reposts from activityId",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitiesRepost"
                },
                "examples": {
                  "Activities Post Reposts Found": {
                    "$ref": "#/components/examples/ActivitiesRepost"
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "402": { "$ref": "#/components/responses/PaymentRequired" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "500": { "$ref": "#/components/responses/ServerError" }
        }
      }
    },
    "/v1/enrichment/companies/activities/post": {
      "get": {
        "tags": ["Company"],
        "operationId": "CompaniesActivitiesPost",
        "summary": "Get Company Activities Post",
        "description": "This operation allows you to retrieve the activity post details of a company based on their activity post ID. This operation consumes 1 credit.",
        "parameters": [
          {
            "name": "activityId",
            "in": "query",
            "required": true,
            "schema": { "type": "string" },
            "description": "This required parameter is a string. It represents the ID of the activity post you want to retrieve."
          }
        ],
        "responses": {
          "200": {
            "description": "The endpoint returns the activity post from activityId",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitiesPost"
                },
                "examples": {
                  "Activities Post Found": {
                    "$ref": "#/components/examples/ActivitiesPost"
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "402": { "$ref": "#/components/responses/PaymentRequired" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "500": { "$ref": "#/components/responses/ServerError" }
        }
      }
    },
    "/v1/enrichment/companies/activities/posts": {
      "get": {
        "tags": ["Company"],
        "operationId": "CompaniesActivitiesPosts",
        "summary": "Get Company Activities Posts",
        "description": "This operation allows you to retrieve all activity posts of a company based on their Profile URL. Pagination is limited to 10 pages, with a maximum of 50 items per page, allowing retrieval of up to 500 items. This operation consumes 1 credit.",
        "parameters": [
          {
            "name": "linkedInUrl",
            "in": "query",
            "required": true,
            "schema": { "type": "string" },
            "description": "This required parameter is a string. It represents the Profile URL you want to retrieve all activity posts."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": { "type": "number" },
            "description": "This optional parameter is a string. It represents the page number of the results."
          }
        ],
        "responses": {
          "200": {
            "description": "The endpoint returns the activity posts from the Profile URL",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyActivitiesPosts"
                },
                "examples": {
                  "Activities Posts Found": {
                    "$ref": "#/components/examples/CompanyActivitiesPosts"
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "402": { "$ref": "#/components/responses/PaymentRequired" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "500": { "$ref": "#/components/responses/ServerError" }
        }
      }
    },
    "/v1/enrichment/companies/activities/post/comments": {
      "get": {
        "tags": ["Company"],
        "operationId": "CompaniesActivitiesPostComments",
        "summary": "Get Company Activities Post Comments",
        "description": "This operation allows you to retrieve all comments on activity post of a company based on their activity post ID. Pagination is limited to 10 pages, with a maximum of 50 items per page, allowing retrieval of up to 500 items. This operation consumes 1 credit.",
        "parameters": [
          {
            "name": "activityId",
            "in": "query",
            "required": true,
            "schema": { "type": "string" },
            "description": "This required parameter is a string. It represents the ID of the activity post you want to retrieve comments."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": { "type": "number" },
            "description": "This optional parameter is a string. It represents the page number of the results."
          }
        ],
        "responses": {
          "200": {
            "description": "The endpoint returns the activity post comments from activityId",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitiesComment"
                },
                "examples": {
                  "Activities Post Comments Found": {
                    "$ref": "#/components/examples/ActivitiesComment"
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "402": { "$ref": "#/components/responses/PaymentRequired" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "500": { "$ref": "#/components/responses/ServerError" }
        }
      }
    },
    "/v1/enrichment/companies/activities/post/reactions": {
      "get": {
        "tags": ["Company"],
        "operationId": "CompaniesActivitiesPostReactions",
        "summary": "Get Company Activities Post Reactions",
        "description": "This operation allows you to retrieve all reactions on activity post of a company based on their activity post ID. Pagination is limited to 10 pages, with a maximum of 50 items per page, allowing retrieval of up to 500 items. This operation consumes 1 credit.",
        "parameters": [
          {
            "name": "activityId",
            "in": "query",
            "required": true,
            "schema": { "type": "string" },
            "description": "This required parameter is a string. It represents the ID of the activity post you want to retrieve reactions."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": { "type": "number" },
            "description": "This optional parameter is a string. It represents the page number of the results."
          }
        ],
        "responses": {
          "200": {
            "description": "The endpoint returns the activity post reactions from activityId",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitiesReaction"
                },
                "examples": {
                  "Activities Post Reactions Found": {
                    "$ref": "#/components/examples/ActivitiesReaction"
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "402": { "$ref": "#/components/responses/PaymentRequired" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "500": { "$ref": "#/components/responses/ServerError" }
        }
      }
    },
    "/v1/enrichment/companies/activities/post/reposts": {
      "get": {
        "tags": ["Company"],
        "operationId": "CompaniesActivitiesPostReposts",
        "summary": "Get Company Activities Post Reposts",
        "description": "This operation allows you to retrieve all reposts on activity post of a company based on their activity post ID. Pagination is limited to 10 pages, with a maximum of 50 items per page, allowing retrieval of up to 500 items. This operation consumes 1 credit.",
        "parameters": [
          {
            "name": "activityId",
            "in": "query",
            "required": true,
            "schema": { "type": "string" },
            "description": "This required parameter is a string. It represents the ID of the activity post you want to retrieve reposts."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": { "type": "number" },
            "description": "This optional parameter is a string. It represents the page number of the results."
          }
        ],
        "responses": {
          "200": {
            "description": "The endpoint returns the activity post reposts from activityId",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitiesRepost"
                },
                "examples": {
                  "Activities Post Reposts Found": {
                    "$ref": "#/components/examples/ActivitiesRepost"
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "402": { "$ref": "#/components/responses/PaymentRequired" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "500": { "$ref": "#/components/responses/ServerError" }
        }
      }
    },
    "/v1/workspaces/quotas": {
      "get": {
        "tags": ["Workspaces"],
        "operationId": "WorkspacesQuotas",
        "summary": "Workspaces Quotas",
        "description": "This endpoint retrieves the quotas for a specific workspace, including the remaining credits (credits_left) and rate limit (rate_limit_left). It is designed to help monitor resource availability and ensure proper usage within the workspace.",
        "responses": {
          "200": {
            "description": "The endpoint returns information about the workspace quotas, including remaining credits (credits_left) and rate limit (rate_limit_left).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspacesQuotas"
                },
                "examples": {
                  "QuotasFound": {
                    "$ref": "#/components/examples/QuotasFound"
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "402": { "$ref": "#/components/responses/PaymentRequired" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "500": { "$ref": "#/components/responses/ServerError" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProfileSearchResponseV0": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates success or failure of api request."
          },
          "email": {
            "type": "string",
            "description": "Represents the email of the person account that was queried"
          },
          "emailType": {
            "type": "string",
            "description": "Represents the type of account."
          },
          "person": {
            "oneOf": [
              { "$ref": "#/components/schemas/Person" },
              { "type": "boolean", "enum": [false] }
            ]
          },
          "company": {
            "oneOf": [
              { "$ref": "#/components/schemas/Company" },
              { "type": "boolean", "enum": [false] }
            ]
          },
          "credits_left": {
            "type": "integer",
            "description": "Represents the usable credits available for the user account after this query."
          },
          "rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "daily_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "minute_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable minute request limit available for the user account after this query."
          },
          "next_minute_rate_limit_reset": {
            "type": "integer",
            "description": "Represents the next minute rate limit reset for the user account after this query."
          }
        }
      },
      "ProfileResponseV0": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates success or failure of api request."
          },
          "credits_left": {
            "type": "integer",
            "description": "The usable credits available for the user account after this query."
          },
          "rate_limit_left": {
            "type": "integer",
            "description": "The usable daily request limit available for the user account after this query."
          },
          "daily_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "minute_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable minute request limit available for the user account after this query."
          },
          "next_minute_rate_limit_reset": {
            "type": "integer",
            "description": "Represents the next minute rate limit reset for the user account after this query."
          },
          "person": {
            "oneOf": [
              { "$ref": "#/components/schemas/Person" },
              { "type": "boolean", "enum": [false] }
            ]
          },
          "company": {
            "oneOf": [
              { "$ref": "#/components/schemas/Company" },
              { "type": "boolean", "enum": [false] }
            ]
          }
        }
      },
      "ProfileResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates success or failure of api request."
          },
          "credits_left": {
            "type": "integer",
            "description": "Represents the usable credits available for the user account after this query."
          },
          "rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "daily_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "minute_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable minute request limit available for the user account after this query."
          },
          "next_minute_rate_limit_reset": {
            "type": "integer",
            "description": "Represents the next minute rate limit reset for the user account after this query."
          },
          "person": {
            "$ref": "#/components/schemas/PersonProfile"
          }
        }
      },
      "PersonProfile": {
        "type": "object",
        "properties": {
          "publicIdentifier": {
            "type": "string",
            "description": "Public identifier of the person"
          },
          "linkedInIdentifier": {
            "type": "string",
            "description": "Social identifier of the person"
          },
          "memberIdentifier": {
            "type": "string",
            "description": "Member identifier of the person"
          },
          "linkedInUrl": {
            "type": "string",
            "description": "Social URL of the person"
          },
          "firstName": {
            "type": "string",
            "description": "First name of the person"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of the person"
          },
          "headline": {
            "type": "string",
            "description": "Professional headline of the person"
          },
          "location": {
            "$ref": "#/components/schemas/PersonLocation"
          },
          "photoUrl": {
            "type": "string",
            "description": "URL to the person's profile photo"
          },
          "backgroundUrl": {
            "type": "string",
            "description": "URL to the person's background image"
          },
          "openToWork": {
            "type": "boolean",
            "description": "Indicates if the person is open to work"
          },
          "premium": {
            "type": "boolean",
            "description": "Indicates if the person has a premium Social account"
          },
          "pronoun": {
            "type": "string",
            "description": "Preferred pronoun of the person"
          },
          "showVerificationBadge": {
            "type": "boolean",
            "description": "Indicates if the person shows verification badge"
          }
        }
      },
      "PersonLocation": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "description": "City where the person is located"
          },
          "state": {
            "type": "string",
            "description": "State where the person is located"
          },
          "country": {
            "type": "string",
            "description": "Country where the person is located"
          },
          "countryCode": {
            "type": "string",
            "description": "Country code where the person is located"
          }
        }
      },
      "SummaryResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates success or failure of api request."
          },
          "credits_left": {
            "type": "integer",
            "description": "Represents the usable credits available for the user account after this query."
          },
          "rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "daily_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "minute_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable minute request limit available for the user account after this query."
          },
          "next_minute_rate_limit_reset": {
            "type": "integer",
            "description": "Represents the next minute rate limit reset for the user account after this query."
          },
          "summary": {
            "type": "string",
            "description": "A summary description of the person or entity."
          }
        }
      },
      "FollowersCountResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates success or failure of api request."
          },
          "credits_left": {
            "type": "integer",
            "description": "Represents the usable credits available for the user account after this query."
          },
          "rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "daily_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "minute_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable minute request limit available for the user account after this query."
          },
          "next_minute_rate_limit_reset": {
            "type": "integer",
            "description": "Represents the next minute rate limit reset for the user account after this query."
          },
          "followersCount": {
            "type": "string",
            "description": "The number of followers of the person."
          }
        }
      },
      "ExperienceResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates success or failure of api request."
          },
          "credits_left": {
            "type": "integer",
            "description": "Represents the usable credits available for the user account after this query."
          },
          "rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "daily_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "minute_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable minute request limit available for the user account after this query."
          },
          "next_minute_rate_limit_reset": {
            "type": "integer",
            "description": "Represents the next minute rate limit reset for the user account after this query."
          },
          "positions": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Position" },
            "description": "Array of work experience positions"
          }
        }
      },
      "Position": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Job title or position name"
          },
          "companyName": {
            "type": "string",
            "description": "Name of the company"
          },
          "description": {
            "type": "string",
            "description": "Description of the position or role"
          },
          "startEndDate": {
            "$ref": "#/components/schemas/StartEndDate",
            "description": "Start and end dates of the position"
          },
          "companyLogo": {
            "type": "string",
            "format": "uri",
            "description": "URL to the company logo image"
          },
          "linkedInUrl": {
            "type": "string",
            "format": "uri",
            "description": "Social URL of the company"
          },
          "linkedInId": {
            "type": "string",
            "description": "Social identifier of the company"
          }
        }
      },
      "StartEndDate": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time",
            "description": "Start date of the position in ISO 8601 format"
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "End date of the position in ISO 8601 format, null if current position"
          }
        }
      },
      "EducationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates success or failure of api request."
          },
          "credits_left": {
            "type": "integer",
            "description": "Represents the usable credits available for the user account after this query."
          },
          "rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "daily_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "minute_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable minute request limit available for the user account after this query."
          },
          "next_minute_rate_limit_reset": {
            "type": "integer",
            "description": "Represents the next minute rate limit reset for the user account after this query."
          },
          "schools": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/School" },
            "description": "Array of education schools and degrees"
          }
        }
      },
      "School": {
        "type": "object",
        "properties": {
          "degreeName": {
            "type": "string",
            "description": "Name of the degree or program"
          },
          "fieldOfStudy": {
            "type": "string",
            "description": "Field of study or specialization"
          },
          "description": {
            "type": "string",
            "description": "Description of the degree or program"
          },
          "linkedInUrl": {
            "type": "string",
            "format": "uri",
            "description": "Social URL of the school"
          },
          "schoolLogo": {
            "type": "string",
            "format": "uri",
            "description": "URL to the school logo image"
          },
          "schoolName": {
            "type": "string",
            "description": "Name of the educational institution"
          },
          "startEndDate": {
            "$ref": "#/components/schemas/StartEndDate",
            "description": "Start and end dates of the education period"
          }
        }
      },
      "SkillsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates success or failure of api request."
          },
          "credits_left": {
            "type": "integer",
            "description": "Represents the usable credits available for the user account after this query."
          },
          "rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "daily_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "minute_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable minute request limit available for the user account after this query."
          },
          "next_minute_rate_limit_reset": {
            "type": "integer",
            "description": "Represents the next minute rate limit reset for the user account after this query."
          },
          "skills": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Skill" },
            "description": "Array of skills with endorsement counts"
          }
        }
      },
      "Skill": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the skill"
          },
          "endorsementCount": {
            "type": "integer",
            "description": "Number of endorsements for this skill"
          }
        },
        "required": ["name"]
      },
      "LanguagesResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates success or failure of api request."
          },
          "credits_left": {
            "type": "integer",
            "description": "Represents the usable credits available for the user account after this query."
          },
          "rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "daily_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "minute_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable minute request limit available for the user account after this query."
          },
          "next_minute_rate_limit_reset": {
            "type": "integer",
            "description": "Represents the next minute rate limit reset for the user account after this query."
          },
          "languages": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Language" },
            "description": "Array of languages with proficiency levels"
          }
        }
      },
      "Language": {
        "type": "object",
        "properties": {
          "language": {
            "type": "string",
            "description": "Name of the language"
          },
          "proficiency": {
            "type": "string",
            "description": "Proficiency level in the language"
          }
        },
        "required": ["language", "proficiency"]
      },
      "Post": {
        "type": "object",
        "properties": {
          "text": { "type": "string", "description": "Content of the post" },
          "likesCount": {
            "type": "integer",
            "description": "Number of likes on the post"
          },
          "commentsCount": {
            "type": "integer",
            "description": "Number of comments on the post"
          },
          "activityDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the post was created"
          },
          "author": {
            "type": "object",
            "description": "Information about the post author",
            "properties": {
              "authorId": {
                "type": "string",
                "description": "Unique identifier of the post author"
              },
              "authorName": {
                "type": "string",
                "description": "Name of the post author"
              },
              "authorPublicIdentifier": {
                "type": "string",
                "description": "Public identifier of the post author"
              }
            }
          },
          "activityUrl": {
            "type": "string",
            "description": "URL of the post"
          },
          "isRepublishedPost": {
            "type": "boolean",
            "description": "Indicates if this post is a republished post from another user"
          },
          "relatedPost": {
            "type": "object",
            "description": "Information about the original post if this is a republished post",
            "properties": {
              "text": {
                "type": "string",
                "description": "Content of the related post"
              },
              "likesCount": {
                "type": "integer",
                "description": "Number of likes on the related post"
              },
              "commentsCount": {
                "type": "integer",
                "description": "Number of comments on the related post"
              },
              "activityDate": {
                "type": "string",
                "format": "date-time",
                "description": "Date and time when the related post was created"
              },
              "authorId": {
                "type": "string",
                "description": "Unique identifier of the related post author"
              },
              "authorPublicIdentifier": {
                "type": "string",
                "description": "Public identifier of the related post author"
              },
              "authorName": {
                "type": "string",
                "description": "Name of the related post author"
              },
              "activityUrl": {
                "type": "string",
                "description": "URL of the related post"
              },
              "relatedPost": {
                "type": "object",
                "nullable": true,
                "description": "Nested related post (if any)"
              }
            }
          }
        }
      },
      "Comment": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "Content of the comment"
          },
          "likesCount": {
            "type": "integer",
            "description": "Number of likes on the comment"
          },
          "commentsCount": {
            "type": "integer",
            "description": "Number of replies to the comment"
          },
          "activityDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the comment was created"
          },
          "authorId": {
            "type": "string",
            "description": "Unique identifier of the comment author"
          },
          "authorName": {
            "type": "string",
            "description": "Name of the comment author"
          },
          "authorPublicIdentifier": {
            "type": "string",
            "description": "Public identifier of the comment author"
          },
          "post": {
            "$ref": "#/components/schemas/Post",
            "description": "The post on which this comment was made"
          },
          "activityUrl": {
            "type": "string",
            "description": "URL of the comment"
          }
        }
      },
      "Reaction": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of reaction (e.g., \"LIKE\", \"CELEBRATE\", etc.)"
          },
          "activityDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the reaction was made"
          },
          "authorId": {
            "type": "string",
            "description": "Unique identifier of the person who made the reaction"
          },
          "authorName": {
            "type": "string",
            "description": "Name of the person who made the reaction"
          },
          "authorPublicIdentifier": {
            "type": "string",
            "description": "Public identifier of the person who made the reaction"
          },
          "relatedPost": {
            "$ref": "#/components/schemas/Post",
            "description": "The post on which this reaction was made"
          },
          "relatedComment": {
            "$ref": "#/components/schemas/Comment",
            "nullable": true,
            "description": "The comment on which this reaction was made (if applicable)"
          },
          "activityUrl": {
            "type": "string",
            "description": "URL of the reaction"
          }
        }
      },
      "Company": {
        "type": "object",
        "properties": {
          "description": { "type": "string" },
          "employeeCount": { "type": "number" },
          "employeeCountRange": {
            "type": "object",
            "properties": {
              "start": { "type": "number" },
              "end": { "type": "number" }
            }
          },
          "followerCount": { "type": "number" },
          "headquarter": {
            "type": "object",
            "properties": {
              "city": { "type": "string" },
              "country": { "type": "string" },
              "geographicArea": { "type": "string" },
              "postalCode": { "type": "string" },
              "street1": { "type": "string" },
              "street2": { "type": "string" }
            }
          },
          "industry": { "type": "string" },
          "linkedInId": { "type": "string" },
          "linkedInUrl": { "type": "string" },
          "name": { "type": "string" },
          "specialities": { "type": "array", "items": { "type": "string" } },
          "tagline": { "type": "string" },
          "universalName": { "type": "string" },
          "websiteUrl": { "type": "string" }
        }
      },
      "CompanySearch": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates success or failure of api request."
          },
          "credits_left": {
            "type": "integer",
            "description": "Represents the usable credits available for the user account after this query."
          },
          "rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "daily_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "minute_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable minute request limit available for the user account after this query."
          },
          "next_minute_rate_limit_reset": {
            "type": "integer",
            "description": "Represents the next minute rate limit reset for the user account after this query."
          },
          "company": {
            "oneOf": [
              { "$ref": "#/components/schemas/Company" },
              { "type": "boolean", "enum": [false] }
            ]
          }
        }
      },
      "ExtractCompanyDataProfile": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates success or failure of api request."
          },
          "credits_left": {
            "type": "integer",
            "description": "Represents the usable credits available for the user account after this query."
          },
          "rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "daily_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "minute_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable minute request limit available for the user account after this query."
          },
          "next_minute_rate_limit_reset": {
            "type": "integer",
            "description": "Represents the next minute rate limit reset for the user account after this query."
          },
          "company": {
            "oneOf": [
              { "$ref": "#/components/schemas/Company" },
              { "type": "boolean", "enum": [false] }
            ]
          }
        }
      },
      "Job": {
        "type": "object",
        "properties": {
          "linkedinIdentifier": { "type": "string" },
          "title": { "type": "string" },
          "companyName": { "type": "string" },
          "companyLogo": { "type": "string" },
          "description": { "type": "string" },
          "location": { "type": "string" },
          "url": { "type": "string" },
          "creationDate": { "type": "string" },
          "repostedJob": { "type": "boolean" },
          "repostDate": { "type": "string" },
          "applicantsCount": { "type": "number" },
          "flexibility": { "type": "string" },
          "experienceLevel": { "type": "string" },
          "contractType": { "type": "string" }
        }
      },
      "JobSearch": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates success or failure of api request."
          },
          "credits_left": {
            "type": "integer",
            "description": "Represents the usable credits available for the user account after this query."
          },
          "rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "daily_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "minute_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable minute request limit available for the user account after this query."
          },
          "next_minute_rate_limit_reset": {
            "type": "integer",
            "description": "Represents the next minute rate limit reset for the user account after this query."
          },
          "metadata": {
            "description": "Metadata information",
            "$ref": "#/components/schemas/Metadata"
          },
          "jobs": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Job" },
            "description": "Array of jobs"
          }
        }
      },
      "ExtractJobData": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates success or failure of api request."
          },
          "credits_left": {
            "type": "integer",
            "description": "Represents the usable credits available for the user account after this query."
          },
          "rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "daily_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "minute_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable minute request limit available for the user account after this query."
          },
          "next_minute_rate_limit_reset": {
            "type": "integer",
            "description": "Represents the next minute rate limit reset for the user account after this query."
          },
          "job": {
            "oneOf": [
              { "$ref": "#/components/schemas/Job" },
              { "type": "boolean", "enum": [false] }
            ]
          }
        }
      },
      "Metadata": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "description": "The current page number being viewed."
          },
          "pageNumber": {
            "type": "integer",
            "description": "The total number of available pages."
          },
          "perPage": {
            "type": "integer",
            "description": "The number of items displayed per page."
          },
          "total": {
            "type": "integer",
            "description": "The total number of items available."
          }
        }
      },
      "PostV2": {
        "properties": {
          "activityId": {
            "type": "string",
            "description": "Unique identifier of the activity."
          },
          "text": { "type": "string", "description": "Content of the post." },
          "reactionsCount": {
            "type": "integer",
            "description": "Number of reactions on the post."
          },
          "commentsCount": {
            "type": "integer",
            "description": "Number of comments on the post."
          },
          "activityDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time of the activity."
          },
          "author": {
            "type": "object",
            "description": "Information about the author of the post.",
            "properties": {
              "authorId": {
                "type": "string",
                "description": "Unique identifier of the author."
              },
              "authorName": {
                "type": "string",
                "description": "Full name of the author."
              },
              "authorPublicIdentifier": {
                "type": "string",
                "description": "Public identifier of the author."
              },
              "authorHeadline": {
                "type": "string",
                "description": "Headline or title of the author."
              },
              "authorImage": {
                "type": "string",
                "format": "uri",
                "description": "URL to the author's profile image."
              },
              "authorUrl": {
                "type": "string",
                "format": "uri",
                "description": "URL to the author's Social profile."
              }
            }
          },
          "activityUrl": {
            "type": "string",
            "format": "uri",
            "description": "URL of the activity."
          },
          "shareUrl": {
            "type": "string",
            "format": "uri",
            "description": "URL of the activity share format."
          },
          "relatedPost": {
            "type": "object",
            "description": "Related post information.",
            "properties": {
              "text": {
                "type": "string",
                "description": "Content of the related post."
              },
              "activityDate": {
                "type": "string",
                "format": "date-time",
                "description": "Date and time of the related post activity."
              },
              "author": {
                "type": "object",
                "description": "Information about the author of the related post.",
                "properties": {
                  "authorId": {
                    "type": "string",
                    "description": "Unique identifier of the author."
                  },
                  "authorName": {
                    "type": "string",
                    "description": "Full name of the author."
                  },
                  "authorPublicIdentifier": {
                    "type": "string",
                    "description": "Public identifier of the author."
                  },
                  "authorHeadline": {
                    "type": "string",
                    "description": "Headline or description of the author."
                  },
                  "authorUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": "URL to the author's profile."
                  }
                }
              },
              "activityUrl": {
                "type": "string",
                "format": "uri",
                "description": "URL of the related post."
              },
              "shareUrl": {
                "type": "string",
                "format": "uri",
                "description": "URL of the activity share format."
              }
            }
          }
        }
      },
      "PostsV2": {
        "properties": {
          "text": {
            "type": "string",
            "description": "The text content of the comment."
          },
          "reactionsCount": {
            "type": "integer",
            "description": "The number of reactions on the comment."
          },
          "commentsCount": {
            "type": "integer",
            "description": "The number of comments (replies) on the comment."
          },
          "activityDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time of the activity in ISO 8601 format."
          },
          "author": {
            "type": "object",
            "description": "Information about the author of the comment.",
            "properties": {
              "authorId": {
                "type": "string",
                "description": "The unique identifier of the author."
              },
              "authorName": {
                "type": "string",
                "description": "The full name of the author."
              },
              "authorPublicIdentifier": {
                "type": "string",
                "description": "The public identifier of the author."
              }
            }
          },
          "activityUrl": {
            "type": "string",
            "format": "uri",
            "description": "The URL of the activity."
          },
          "shareUrl": {
            "type": "string",
            "format": "uri",
            "description": "URL of the activity share format."
          },
          "relatedPost": {
            "type": "object",
            "description": "Information about the related post.",
            "properties": {
              "activityId": {
                "type": "string",
                "description": "The unique identifier of the related post."
              },
              "text": {
                "type": "string",
                "description": "The text content of the related post."
              },
              "reactionsCount": {
                "type": "integer",
                "description": "The number of reactions on the related post."
              },
              "commentsCount": {
                "type": "integer",
                "description": "The number of comments on the related post."
              },
              "activityDate": {
                "type": "string",
                "format": "date-time",
                "description": "The date and time of the related post activity in ISO 8601 format."
              },
              "author": {
                "type": "object",
                "description": "Information about the author of the related post.",
                "properties": {
                  "authorId": {
                    "type": "string",
                    "description": "The unique identifier of the author."
                  },
                  "authorName": {
                    "type": "string",
                    "description": "The full name of the author."
                  },
                  "authorPublicIdentifier": {
                    "type": "string",
                    "description": "The public identifier of the author."
                  }
                }
              },
              "activityUrl": {
                "type": "string",
                "format": "uri",
                "description": "The URL of the related post."
              },
              "shareUrl": {
                "type": "string",
                "format": "uri",
                "description": "URL of the activity share format."
              },
              "relatedPost": {
                "type": "object",
                "nullable": true,
                "description": "Nested related post information, if any."
              }
            }
          }
        }
      },
      "CommentV2": {
        "properties": {
          "text": {
            "type": "string",
            "description": "The content of the comment."
          },
          "reactionsCount": {
            "type": "integer",
            "description": "Number of reactions on the comment."
          },
          "commentsCount": {
            "type": "integer",
            "description": "Number of comments (replies) to this comment."
          },
          "activityDate": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp (in milliseconds) of the comment activity."
          },
          "author": {
            "type": "object",
            "description": "Information about the author of the comment.",
            "properties": {
              "authorId": {
                "type": "string",
                "description": "Unique identifier of the author."
              },
              "authorName": {
                "type": "string",
                "description": "Full name of the author."
              },
              "authorPublicIdentifier": {
                "type": "string",
                "description": "Public identifier of the author."
              }
            }
          },
          "activityUrl": {
            "type": "string",
            "format": "uri",
            "description": "URL to the activity or comment."
          }
        }
      },
      "CommentsV2": {
        "properties": {
          "text": {
            "type": "string",
            "description": "The text content of the comment."
          },
          "reactionsCount": {
            "type": "integer",
            "description": "The number of reactions on the comment."
          },
          "commentsCount": {
            "type": "integer",
            "description": "The number of comments (replies) on the comment."
          },
          "activityDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time of the activity in ISO 8601 format."
          },
          "author": {
            "type": "object",
            "description": "Information about the author of the comment.",
            "properties": {
              "authorId": {
                "type": "string",
                "description": "The unique identifier of the author."
              },
              "authorName": {
                "type": "string",
                "description": "The full name of the author."
              },
              "authorPublicIdentifier": {
                "type": "string",
                "description": "The public identifier of the author."
              }
            }
          },
          "activityUrl": {
            "type": "string",
            "format": "uri",
            "description": "The URL of the activity."
          },
          "relatedPost": {
            "type": "object",
            "description": "Information about the related post.",
            "properties": {
              "activityId": {
                "type": "string",
                "description": "The unique identifier of the related post."
              },
              "text": {
                "type": "string",
                "description": "The text content of the related post."
              },
              "reactionsCount": {
                "type": "integer",
                "description": "The number of reactions on the related post."
              },
              "commentsCount": {
                "type": "integer",
                "description": "The number of comments on the related post."
              },
              "activityDate": {
                "type": "string",
                "format": "date-time",
                "description": "The date and time of the related post activity in ISO 8601 format."
              },
              "author": {
                "type": "object",
                "description": "Information about the author of the related post.",
                "properties": {
                  "authorId": {
                    "type": "string",
                    "description": "The unique identifier of the author."
                  },
                  "authorName": {
                    "type": "string",
                    "description": "The full name of the author."
                  },
                  "authorPublicIdentifier": {
                    "type": "string",
                    "description": "The public identifier of the author."
                  }
                }
              },
              "activityUrl": {
                "type": "string",
                "format": "uri",
                "description": "The URL of the related post."
              },
              "shareUrl": {
                "type": "string",
                "format": "uri",
                "description": "URL of the activity share format."
              },
              "relatedPost": {
                "type": "object",
                "nullable": true,
                "description": "Nested related post information, if any."
              }
            }
          }
        }
      },
      "ReactionV2": {
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of reaction."
          },
          "author": {
            "type": "object",
            "description": "Information about the author who reacted.",
            "properties": {
              "authorId": {
                "type": "string",
                "description": "Unique identifier of the author."
              },
              "authorName": {
                "type": "string",
                "description": "Full name of the author."
              },
              "authorUrl": {
                "type": "string",
                "format": "uri",
                "description": "URL to the author's profile."
              }
            }
          }
        }
      },
      "ReactionsV2": {
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of reaction (e.g., LIKE, LOVE, etc.)."
          },
          "author": {
            "type": "object",
            "description": "Information about the author who reacted.",
            "properties": {
              "authorId": {
                "type": "string",
                "description": "Unique identifier of the author."
              },
              "authorName": {
                "type": "string",
                "description": "Full name of the author."
              },
              "authorUrl": {
                "type": "string",
                "format": "uri",
                "description": "URL to the author's profile."
              }
            }
          },
          "relatedPost": {
            "type": "object",
            "description": "Information about the related post.",
            "nullable": true,
            "properties": {
              "activityId": {
                "type": "string",
                "description": "Unique identifier of the related post activity."
              },
              "text": {
                "type": "string",
                "description": "Content of the related post."
              },
              "reactionsCount": {
                "type": "integer",
                "description": "Number of reactions on the related post."
              },
              "commentsCount": {
                "type": "integer",
                "description": "Number of comments on the related post."
              },
              "activityDate": {
                "type": "string",
                "format": "date-time",
                "description": "The date and time of the related post activity."
              },
              "author": {
                "type": "object",
                "description": "Information about the author of the related post.",
                "properties": {
                  "authorId": {
                    "type": "string",
                    "description": "Unique identifier of the related post author."
                  },
                  "authorName": {
                    "type": "string",
                    "description": "Full name of the related post author."
                  },
                  "authorPublicIdentifier": {
                    "type": "string",
                    "description": "Public identifier of the related post author."
                  }
                }
              },
              "activityUrl": {
                "type": "string",
                "format": "uri",
                "description": "URL to the related post activity."
              },
              "shareUrl": {
                "type": "string",
                "format": "uri",
                "description": "URL of the activity share format."
              },
              "relatedPost": {
                "type": "object",
                "nullable": true,
                "description": "Nested related post information, if any."
              }
            }
          }
        }
      },
      "Recommendation": {
        "type": "object",
        "properties": {
          "caption": {
            "type": "string",
            "description": "Caption or context of the recommendation"
          },
          "description": {
            "type": "string",
            "description": "Full text of the recommendation"
          },
          "authorFullname": {
            "type": "string",
            "description": "Full name of the recommendation author"
          },
          "authorUrl": {
            "type": "string",
            "format": "uri",
            "description": "Social URL of the recommendation author"
          }
        }
      },
      "RecommendationsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates success or failure of api request."
          },
          "credits_left": {
            "type": "integer",
            "description": "Represents the usable credits available for the user account after this query."
          },
          "rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "daily_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "minute_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable minute request limit available for the user account after this query."
          },
          "next_minute_rate_limit_reset": {
            "type": "integer",
            "description": "Represents the next minute rate limit reset for the user account after this query."
          },
          "recommendations": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Recommendation" },
            "description": "Array of recommendations"
          }
        }
      },
      "RepostV2": {
        "properties": {
          "activityDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the repost activity occurred."
          },
          "author": {
            "type": "object",
            "description": "Information about the author who reposted.",
            "properties": {
              "authorId": {
                "type": "string",
                "description": "Unique identifier of the author."
              },
              "authorName": {
                "type": "string",
                "description": "Full name of the author."
              },
              "authorPublicIdentifier": {
                "type": "string",
                "description": "Public identifier of the author."
              }
            }
          },
          "activityUrl": {
            "type": "string",
            "format": "uri",
            "description": "URL to the repost activity."
          }
        }
      },
      "ActivitiesPost": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates success or failure of api request."
          },
          "credits_left": {
            "type": "integer",
            "description": "Represents the usable credits available for the user account after this query."
          },
          "rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "daily_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "minute_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable minute request limit available for the user account after this query."
          },
          "next_minute_rate_limit_reset": {
            "type": "integer",
            "description": "Represents the next minute rate limit reset for the user account after this query."
          },
          "post": {
            "type": "object",
            "description": "Activity post of a person",
            "$ref": "#/components/schemas/PostV2"
          }
        }
      },
      "ActivitiesPosts": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates success or failure of api request."
          },
          "credits_left": {
            "type": "integer",
            "description": "Represents the usable credits available for the user account after this query."
          },
          "rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "daily_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "minute_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable minute request limit available for the user account after this query."
          },
          "next_minute_rate_limit_reset": {
            "type": "integer",
            "description": "Represents the next minute rate limit reset for the user account after this query."
          },
          "posts": {
            "type": "array",
            "description": "All activity posts of a person",
            "items": { "$ref": "#/components/schemas/PostV2" }
          }
        }
      },
      "ActivitiesComment": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates success or failure of api request."
          },
          "credits_left": {
            "type": "integer",
            "description": "Represents the usable credits available for the user account after this query."
          },
          "rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "daily_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "minute_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable minute request limit available for the user account after this query."
          },
          "next_minute_rate_limit_reset": {
            "type": "integer",
            "description": "Represents the next minute rate limit reset for the user account after this query."
          },
          "metadata": {
            "description": "Metadata information",
            "$ref": "#/components/schemas/Metadata"
          },
          "comments": {
            "type": "array",
            "description": "All comments of a person on a post",
            "items": { "$ref": "#/components/schemas/CommentV2" }
          }
        }
      },
      "ActivitiesComments": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates success or failure of api request."
          },
          "credits_left": {
            "type": "integer",
            "description": "Represents the usable credits available for the user account after this query."
          },
          "rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "daily_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "minute_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable minute request limit available for the user account after this query."
          },
          "next_minute_rate_limit_reset": {
            "type": "integer",
            "description": "Represents the next minute rate limit reset for the user account after this query."
          },
          "comments": {
            "type": "array",
            "description": "All comments of a profile",
            "items": { "$ref": "#/components/schemas/CommentsV2" }
          }
        }
      },
      "ActivitiesReaction": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates success or failure of api request."
          },
          "credits_left": {
            "type": "integer",
            "description": "Represents the usable credits available for the user account after this query."
          },
          "rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "daily_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "minute_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable minute request limit available for the user account after this query."
          },
          "next_minute_rate_limit_reset": {
            "type": "integer",
            "description": "Represents the next minute rate limit reset for the user account after this query."
          },
          "metadata": {
            "description": "Metadata information",
            "$ref": "#/components/schemas/Metadata"
          },
          "reactions": {
            "type": "array",
            "description": "All reactions of a person on a post",
            "items": { "$ref": "#/components/schemas/ReactionV2" }
          }
        }
      },
      "ActivitiesReactions": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates success or failure of api request."
          },
          "credits_left": {
            "type": "integer",
            "description": "Represents the usable credits available for the user account after this query."
          },
          "rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "daily_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "minute_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable minute request limit available for the user account after this query."
          },
          "next_minute_rate_limit_reset": {
            "type": "integer",
            "description": "Represents the next minute rate limit reset for the user account after this query."
          },
          "reactions": {
            "type": "array",
            "description": "All reactions of a person on a post",
            "items": { "$ref": "#/components/schemas/ReactionsV2" }
          }
        }
      },
      "ActivitiesRepost": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates success or failure of api request."
          },
          "credits_left": {
            "type": "integer",
            "description": "Represents the usable credits available for the user account after this query."
          },
          "rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "daily_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "minute_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable minute request limit available for the user account after this query."
          },
          "next_minute_rate_limit_reset": {
            "type": "integer",
            "description": "Represents the next minute rate limit reset for the user account after this query."
          },
          "metadata": {
            "description": "Metadata information",
            "$ref": "#/components/schemas/Metadata"
          },
          "reactions": {
            "type": "array",
            "description": "All reposts of a person on a post",
            "items": { "$ref": "#/components/schemas/RepostV2" }
          }
        }
      },
      "CompanyActivitiesPosts": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates success or failure of api request."
          },
          "credits_left": {
            "type": "integer",
            "description": "Represents the usable credits available for the user account after this query."
          },
          "rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "daily_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "minute_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable minute request limit available for the user account after this query."
          },
          "next_minute_rate_limit_reset": {
            "type": "integer",
            "description": "Represents the next minute rate limit reset for the user account after this query."
          },
          "metadata": {
            "description": "Metadata information",
            "$ref": "#/components/schemas/Metadata"
          },
          "posts": {
            "type": "array",
            "description": "All activity posts of a company",
            "items": { "$ref": "#/components/schemas/PostV2" }
          }
        }
      },
      "Quotas": {
        "type": "object",
        "properties": {
          "credits_left": {
            "type": "integer",
            "description": "Represents the usable credits available for the user account after this query."
          },
          "rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          }
        }
      },
      "WorkspacesQuotas": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the API request was successful."
          },
          "data": {
            "type": "object",
            "$ref": "#/components/schemas/Quotas",
            "description": "Contains the quotas information for the workspace."
          }
        }
      },
      "ErrorResponseSchema": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean", "enum": [false] },
          "title": { "type": "string" },
          "msg": { "type": "string" }
        }
      },
      "Certification": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the certification"
          },
          "organizationName": {
            "type": "string",
            "description": "Name of the organization that issued the certification"
          },
          "organizationUrl": {
            "type": "string",
            "format": "uri",
            "description": "Social URL of the organization"
          },
          "issuedDate": {
            "type": "string",
            "description": "Date when the certification was issued"
          }
        }
      },
      "CertificationsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates success or failure of api request."
          },
          "credits_left": {
            "type": "integer",
            "description": "Represents the usable credits available for the user account after this query."
          },
          "rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "daily_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "minute_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable minute request limit available for the user account after this query."
          },
          "next_minute_rate_limit_reset": {
            "type": "integer",
            "description": "Represents the next minute rate limit reset for the user account after this query."
          },
          "certifications": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Certification" },
            "description": "Array of certifications"
          }
        }
      },
      "VolunteeringExperience": {
        "type": "object",
        "properties": {
          "organizationName": {
            "type": "string",
            "description": "Name of the organization where volunteering took place"
          },
          "role": {
            "type": "string",
            "description": "Role or position held during volunteering"
          },
          "cause": {
            "type": "string",
            "description": "Cause or area of focus for the volunteering work"
          },
          "period": {
            "type": "string",
            "description": "Time period of the volunteering experience"
          }
        }
      },
      "VolunteeringExperiencesResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates success or failure of api request."
          },
          "credits_left": {
            "type": "integer",
            "description": "Represents the usable credits available for the user account after this query."
          },
          "rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "daily_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable daily request limit available for the user account after this query."
          },
          "minute_rate_limit_left": {
            "type": "integer",
            "description": "Represents the usable minute request limit available for the user account after this query."
          },
          "next_minute_rate_limit_reset": {
            "type": "integer",
            "description": "Represents the next minute rate limit reset for the user account after this query."
          },
          "volunteeringExperiences": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/VolunteeringExperience" },
            "description": "Array of volunteering experiences"
          }
        }
      }
    },
    "examples": {
      "ProfileSearchFoundV0": {
        "summary": "Profile Found",
        "value": {
          "success": true,
          "email": "bill.gates@microsoft.com",
          "emailType": "professional",
          "credits_left": 90000,
          "rate_limit_left": 19000,
          "daily_rate_limit_left": 19000,
          "minute_rate_limit_left": 499,
          "next_minute_rate_limit_reset": "2024-01-15T10:31:00Z",
          "person": {
            "publicIdentifier": "williamhgates",
            "memberIdentifier": "251749025",
            "linkedInIdentifier": "ACoAAA8BYqEBCGLg_vT_ca6mMEqkpp9nVffJ3hc",
            "linkedInUrl": "https://www.social.com/in/williamhgates",
            "firstName": "Bill",
            "lastName": "Gates",
            "headline": "Co-chair, Bill & Melinda Gates Foundation",
            "location": "Seattle, Washington, United States of America",
            "summary": "Co-chair of the Bill & Melinda Gates Foundation. Founder of Breakthrough Energy. Co-founder of Microsoft. Voracious reader. Avid traveler. Active blogger.",
            "photoUrl": "https://media.licdn.com/dms/image/D5603AQHv6LsdiUg1kw/profile-displayphoto-shrink_800_800/0/1695167344576?e=1723680000&v=beta&t=NcEpysYwCpQ_NBg0QTz_a265pEOhfGICFJUX92-KNpw",
            "backgroundUrl": "https://media.licdn.com/dms/image/v2/D5616AQHy2R5tyt2YUA/profile-displaybackgroundimage-shrink_350_1400/profile-displaybackgroundimage-shrink_350_1400/0/1672782785474?e=1731542400&v=beta&t=0HWY04xeK0kEQngJOje3yNudJ6eTvNz2Q2HrTRB4hO8",
            "openToWork": false,
            "premium": false,
            "creationDate": { "month": 5, "year": 2013 },
            "followerCount": 35415,
            "positions": {
              "positionsCount": 3,
              "positionHistory": [
                {
                  "title": "Co-chair",
                  "companyName": "Bill & Melinda Gates Foundation",
                  "description": "",
                  "startEndDate": {
                    "start": { "month": 1, "year": 2000 },
                    "end": null
                  },
                  "companyLogo": "https://media.licdn.com/dms/image/C4E0BAQE7Na_mKQhIJg/company-logo_400_400/0/1633731811337/bill__melinda_gates_foundation_logo?e=1726099200&v=beta&t=LIgstVg1oR5LmBl9u1kolb_xeOqs5kX1ZTcUpaEtsE4",
                  "linkedInUrl": "https://www.social.com/company/8736/",
                  "linkedInId": "8736"
                },
                {
                  "title": "Founder",
                  "companyName": "Breakthrough Energy",
                  "description": "",
                  "startEndDate": {
                    "start": { "month": 1, "year": 2015 },
                    "end": null
                  },
                  "companyLogo": "https://media.licdn.com/dms/image/C4D0BAQGwD9vNu044FA/company-logo_400_400/0/1630531940051/breakthrough_energy_ventures_logo?e=1726099200&v=beta&t=DIU32ElAkeY4aqcq_9uJTAhiZI-v0GoOX77409cLZRE",
                  "linkedInUrl": "https://www.social.com/company/19141006/",
                  "linkedInId": "19141006"
                },
                {
                  "title": "Co-founder",
                  "companyName": "Microsoft",
                  "description": "",
                  "startEndDate": {
                    "start": { "month": 1, "year": 1975 },
                    "end": null
                  },
                  "companyLogo": "https://media.licdn.com/dms/image/C560BAQE88xCsONDULQ/company-logo_400_400/0/1630652622688/microsoft_logo?e=1726099200&v=beta&t=zueWlWXcJ4WjwGSzlUWgPOnjoAm8C2KfSIcWWHxWrGg",
                  "linkedInUrl": "https://www.social.com/company/1035/",
                  "linkedInId": "1035"
                }
              ]
            },
            "schools": {
              "educationsCount": 2,
              "educationHistory": [
                {
                  "degreeName": "",
                  "fieldOfStudy": "",
                  "description": null,
                  "linkedInUrl": "https://www.social.com/company/1646/",
                  "schoolLogo": "https://media.licdn.com/dms/image/C4E0BAQF5t62bcL0e9g/company-logo_400_400/0/1631318058235?e=1726099200&v=beta&t=tSGQKfAlig70DD9n2_xkYR54yBTf7K3aKsau8PMQSVM",
                  "schoolName": "Harvard University",
                  "startEndDate": {
                    "start": { "month": 1, "year": 1973 },
                    "end": { "month": 1, "year": 1975 }
                  }
                },
                {
                  "degreeName": "",
                  "fieldOfStudy": "",
                  "description": null,
                  "linkedInUrl": "https://www.social.com/company/30288/",
                  "schoolLogo": "https://media.licdn.com/dms/image/D560BAQGFmOQmzpxg9A/company-logo_400_400/0/1683732883164/lakeside_school_logo?e=1726099200&v=beta&t=cylwvrQe7Q4N8oU1hotzPfrae8yxPuzdtG1ocBSuEmA",
                  "schoolName": "Lakeside School",
                  "startEndDate": {
                    "start": { "month": null, "year": null },
                    "end": { "month": null, "year": null }
                  }
                }
              ]
            },
            "skills": [],
            "languages": []
          },
          "company": {
            "linkedInId": "1035",
            "name": "Microsoft",
            "universalName": "microsoft",
            "linkedInUrl": "https://www.social.com/company/1035",
            "employeeCount": 228581,
            "employeeCountRange": { "start": 10001, "end": 1 },
            "websiteUrl": "https://news.microsoft.com/",
            "tagline": null,
            "description": "Every company has a mission. What's ours? To empower every person and every organization to achieve more. We believe technology can and should be a force for good and that meaningful innovation contributes to a brighter world in the future and today. Our culture doesn't just encourage curiosity; it embraces it. Each day we make progress together by showing up as our authentic selves. We show up with a learn-it-all mentality. We show up cheering on others, knowing their success doesn't diminish our own. We show up every day open to learning our own biases, changing our behavior, and inviting in differences. Because impact matters.\n\nMicrosoft operates in 190 countries and is made up of more than 220,000 passionate employees worldwide.\n",
            "industry": "Software Development",
            "phone": null,
            "specialities": [
              "Business Software",
              "Developer Tools",
              "Home & Educational Software",
              "Tablets",
              "Search",
              "Advertising",
              "Servers",
              "Windows Operating System",
              "Windows Applications & Platforms",
              "Smartphones",
              "Cloud Computing",
              "Quantum Computing",
              "Future of Work",
              "Productivity",
              "AI",
              "Artificial Intelligence",
              "Machine Learning",
              "Laptops",
              "Mixed Reality",
              "Virtual Reality",
              "Gaming",
              "Developers",
              "IT Professional"
            ],
            "followerCount": 22736947,
            "headquarter": {
              "city": "Redmond",
              "country": "US",
              "postalCode": "98052",
              "geographicArea": "Washington",
              "street1": "1 Microsoft Way",
              "street2": null
            },
            "logo": "https://media.licdn.com/dms/image/C560BAQE88xCsONDULQ/company-logo_400_400/0/1630652622688/microsoft_logo?e=1725494400&v=beta&t=joSXHhDAEare7f9gk8MwXr2sOr84zX7HDx2h5znXEYI"
          }
        }
      },
      "ProfileFoundV0": {
        "summary": "Person Profile Extracted",
        "value": {
          "success": true,
          "credits_left": 90000,
          "rate_limit_left": 19000,
          "daily_rate_limit_left": 19000,
          "minute_rate_limit_left": 499,
          "next_minute_rate_limit_reset": "2024-01-15T10:31:00Z",
          "person": {
            "publicIdentifier": "williamhgates",
            "memberIdentifier": "251749025",
            "linkedInIdentifier": "ACoAAA8BYqEBCGLg_vT_ca6mMEqkpp9nVffJ3hc",
            "linkedInUrl": "https://www.social.com/in/williamhgates",
            "firstName": "Bill",
            "lastName": "Gates",
            "headline": "Co-chair, Bill & Melinda Gates Foundation",
            "location": "Seattle, Washington, United States of America",
            "summary": "Co-chair of the Bill & Melinda Gates Foundation. Founder of Breakthrough Energy. Co-founder of Microsoft. Voracious reader. Avid traveler. Active blogger.",
            "photoUrl": "https://media.licdn.com/dms/image/D5603AQHv6LsdiUg1kw/profile-displayphoto-shrink_800_800/0/1695167344576?e=1723680000&v=beta&t=NcEpysYwCpQ_NBg0QTz_a265pEOhfGICFJUX92-KNpw",
            "backgroundUrl": "https://media.licdn.com/dms/image/v2/D5616AQHy2R5tyt2YUA/profile-displaybackgroundimage-shrink_350_1400/profile-displaybackgroundimage-shrink_350_1400/0/1672782785474?e=1731542400&v=beta&t=0HWY04xeK0kEQngJOje3yNudJ6eTvNz2Q2HrTRB4hO8",
            "openToWork": false,
            "premium": false,
            "creationDate": { "month": 5, "year": 2013 },
            "followerCount": 35415,
            "positions": {
              "positionsCount": 3,
              "positionHistory": [
                {
                  "title": "Co-chair",
                  "companyName": "Bill & Melinda Gates Foundation",
                  "description": "",
                  "startEndDate": {
                    "start": { "month": 1, "year": 2000 },
                    "end": null
                  },
                  "companyLogo": "https://media.licdn.com/dms/image/C4E0BAQE7Na_mKQhIJg/company-logo_400_400/0/1633731811337/bill__melinda_gates_foundation_logo?e=1726099200&v=beta&t=LIgstVg1oR5LmBl9u1kolb_xeOqs5kX1ZTcUpaEtsE4",
                  "linkedInUrl": "https://www.social.com/company/8736/",
                  "linkedInId": "8736"
                },
                {
                  "title": "Founder",
                  "companyName": "Breakthrough Energy",
                  "description": "",
                  "startEndDate": {
                    "start": { "month": 1, "year": 2015 },
                    "end": null
                  },
                  "companyLogo": "https://media.licdn.com/dms/image/C4D0BAQGwD9vNu044FA/company-logo_400_400/0/1630531940051/breakthrough_energy_ventures_logo?e=1726099200&v=beta&t=DIU32ElAkeY4aqcq_9uJTAhiZI-v0GoOX77409cLZRE",
                  "linkedInUrl": "https://www.social.com/company/19141006/",
                  "linkedInId": "19141006"
                },
                {
                  "title": "Co-founder",
                  "companyName": "Microsoft",
                  "description": "",
                  "startEndDate": {
                    "start": { "month": 1, "year": 1975 },
                    "end": null
                  },
                  "companyLogo": "https://media.licdn.com/dms/image/C560BAQE88xCsONDULQ/company-logo_400_400/0/1630652622688/microsoft_logo?e=1726099200&v=beta&t=zueWlWXcJ4WjwGSzlUWgPOnjoAm8C2KfSIcWWHxWrGg",
                  "linkedInUrl": "https://www.social.com/company/1035/",
                  "linkedInId": "1035"
                }
              ]
            },
            "schools": {
              "educationsCount": 2,
              "educationHistory": [
                {
                  "degreeName": "",
                  "fieldOfStudy": "",
                  "description": null,
                  "linkedInUrl": "https://www.social.com/company/1646/",
                  "schoolLogo": "https://media.licdn.com/dms/image/C4E0BAQF5t62bcL0e9g/company-logo_400_400/0/1631318058235?e=1726099200&v=beta&t=tSGQKfAlig70DD9n2_xkYR54yBTf7K3aKsau8PMQSVM",
                  "schoolName": "Harvard University",
                  "startEndDate": {
                    "start": { "month": 1, "year": 1973 },
                    "end": { "month": 1, "year": 1975 }
                  }
                },
                {
                  "degreeName": "",
                  "fieldOfStudy": "",
                  "description": null,
                  "linkedInUrl": "https://www.social.com/company/30288/",
                  "schoolLogo": "https://media.licdn.com/dms/image/D560BAQGFmOQmzpxg9A/company-logo_400_400/0/1683732883164/lakeside_school_logo?e=1726099200&v=beta&t=cylwvrQe7Q4N8oU1hotzPfrae8yxPuzdtG1ocBSuEmA",
                  "schoolName": "Lakeside School",
                  "startEndDate": {
                    "start": { "month": null, "year": null },
                    "end": { "month": null, "year": null }
                  }
                }
              ]
            },
            "skills": [],
            "languages": []
          },
          "company": {
            "linkedInId": "1035",
            "name": "Microsoft",
            "universalName": "microsoft",
            "linkedInUrl": "https://www.social.com/company/1035",
            "employeeCount": 228581,
            "employeeCountRange": { "start": 10001, "end": 1 },
            "websiteUrl": "https://news.microsoft.com/",
            "tagline": null,
            "description": "Every company has a mission. What's ours? To empower every person and every organization to achieve more. We believe technology can and should be a force for good and that meaningful innovation contributes to a brighter world in the future and today. Our culture doesn't just encourage curiosity; it embraces it. Each day we make progress together by showing up as our authentic selves. We show up with a learn-it-all mentality. We show up cheering on others, knowing their success doesn't diminish our own. We show up every day open to learning our own biases, changing our behavior, and inviting in differences. Because impact matters.\n\nMicrosoft operates in 190 countries and is made up of more than 220,000 passionate employees worldwide.\n",
            "industry": "Software Development",
            "phone": null,
            "specialities": [
              "Business Software",
              "Developer Tools",
              "Home & Educational Software",
              "Tablets",
              "Search",
              "Advertising",
              "Servers",
              "Windows Operating System",
              "Windows Applications & Platforms",
              "Smartphones",
              "Cloud Computing",
              "Quantum Computing",
              "Future of Work",
              "Productivity",
              "AI",
              "Artificial Intelligence",
              "Machine Learning",
              "Laptops",
              "Mixed Reality",
              "Virtual Reality",
              "Gaming",
              "Developers",
              "IT Professional"
            ],
            "followerCount": 22736947,
            "headquarter": {
              "city": "Redmond",
              "country": "US",
              "postalCode": "98052",
              "geographicArea": "Washington",
              "street1": "1 Microsoft Way",
              "street2": null
            },
            "logo": "https://media.licdn.com/dms/image/C560BAQE88xCsONDULQ/company-logo_400_400/0/1630652622688/microsoft_logo?e=1725494400&v=beta&t=joSXHhDAEare7f9gk8MwXr2sOr84zX7HDx2h5znXEYI"
          }
        }
      },
      "ProfileFoundV1": {
        "summary": "Person Profile Extracted",
        "value": {
          "success": true,
          "credits_left": 90000,
          "rate_limit_left": 19000,
          "daily_rate_limit_left": 19000,
          "minute_rate_limit_left": 499,
          "next_minute_rate_limit_reset": "2025-07-24T12:11:01.000Z",
          "person": {
            "publicIdentifier": "michael",
            "linkedInIdentifier": "ACoAABTEFqYBfjGaiNAy5ITKaPacBEBDdR1Srhs",
            "memberIdentifier": "248295112",
            "linkedInUrl": "https://www.social.com/in/michael",
            "firstName": "Michael",
            "lastName": "Davis",
            "headline": "VP Sales Scrapin.io - B2B Data for AI",
            "location": {
              "city": "London",
              "state": "England",
              "country": "United Kingdom",
              "countryCode": "GB"
            },
            "summary": "I'm a software engineer with a passion for building scalable and efficient systems.",
            "photoUrl": "https://media.licdn.com/dms/image/v2/D4E03AQG5S0X4QKtN5A/profile-displayphoto-shrink_200_200/B4EZRgQ6wZGYAY-/0/1736781836053?e=1756339200&v=beta&t=phxC3jRwoDG_zQ8QY4Iu6OduHPUM-abbrEHkJZPP9fM",
            "backgroundUrl": "https://media.licdn.com/dms/image/v2/C4E16AQGba4BhpCykTA/profile-displaybackgroundimage-shrink_350_1400/profile-displaybackgroundimage-shrink_350_1400/0/1516880563413?e=1756339200&v=beta&t=fdimLlwIIQEke73CfLZWvq0T367YxZajvtmMwynSIiU",
            "openToWork": false,
            "premium": true,
            "showVerificationBadge": true,
            "creationDate": {
              "month": 6,
              "year": 2014
            },
            "followerCount": 3735,
            "positions": {
              "positionsCount": 10,
              "positionHistory": [
                {
                  "title": "VP of Sales",
                  "companyName": "ScrapIn",
                  "description": "B2B Data for AI +",
                  "startEndDate": {
                    "start": {
                      "month": 1,
                      "year": 2024
                    },
                    "end": null
                  },
                  "companyLogo": "https://media.licdn.com/dms/image/v2/D4E0BAQF-Z-m2ZKv6qQ/company-logo_200_200/B4EZcRELezHcAM-/0/1748337998127/scrapin_api_logo?e=1756339200&v=beta&t=GjTJ9cgDP2iBYJCx8GxXEg8V2hZjnNBOtvXe58eiqJ0",
                  "linkedInUrl": "https://www.social.com/company/100602385/",
                  "linkedInId": "100602385"
                },
                {
                  "title": "Co-Founder & CEO",
                  "companyName": "LukaHQ",
                  "companyLocation": "London, England, United Kingdom",
                  "description": "AI accounting for the mid-market",
                  "startEndDate": {
                    "start": {
                      "month": 1,
                      "year": 2023
                    },
                    "end": {
                      "month": 12,
                      "year": 2023
                    }
                  },
                  "companyLogo": "https://media.licdn.com/dms/image/v2/C4E0BAQHUbWeUxkGCfw/company-logo_400_400/company-logo_400_400/0/1677251426049?e=1756339200&v=beta&t=qQuFuWn2EsyNX-kqmN166nzxW-DxXD66cPph71e3F7g",
                  "linkedInUrl": "https://www.social.com/company/93128145/",
                  "linkedInId": "93128145"
                },
                {
                  "title": "Co-Founder & CEO",
                  "companyName": "Telleroo",
                  "companyLocation": "London",
                  "description": "Leading SME payments platform for bill and payroll payments in the UK 💪",
                  "startEndDate": {
                    "start": {
                      "month": 4,
                      "year": 2016
                    },
                    "end": {
                      "month": 10,
                      "year": 2020
                    }
                  },
                  "companyLogo": "https://media.licdn.com/dms/image/v2/D4E0BAQFg65EK-q7guw/company-logo_100_100/B4EZdkSAIuHsAQ-/0/1749734130592/telleroo_logo?e=1756339200&v=beta&t=4rKb656EJBg9K3ewqcB0_Gjt9Z2roK_8B5ABHX7Qvjg",
                  "linkedInUrl": "https://www.social.com/company/10820464/",
                  "linkedInId": "10820464"
                }
              ]
            },
            "schools": {
              "educationsCount": 2,
              "educationHistory": [
                {
                  "degreeName": "Bachelor of Arts in Business (B.A.)",
                  "fieldOfStudy": "Management & Economics",
                  "linkedInUrl": "https://www.social.com/company/628151/",
                  "schoolLogo": "https://media.licdn.com/dms/image/v2/C4E0BAQHWOueQUCYM2w/company-logo_400_400/company-logo_400_400/0/1631321484128?e=1756339200&v=beta&t=D_3g7F10ojzXtq-dcHxFAvMR8ANmJN_rNb3ETPf9THM",
                  "schoolName": "MCI | The Entrepreneurial School®",
                  "startEndDate": {
                    "start": {
                      "month": 1,
                      "year": 2011
                    },
                    "end": {
                      "month": 1,
                      "year": 2015
                    }
                  }
                },
                {
                  "degreeName": "International Studies - Doing Business in Brazil",
                  "fieldOfStudy": null,
                  "linkedInUrl": "https://www.social.com/company/8175/",
                  "schoolLogo": "https://media.licdn.com/dms/image/v2/C4D0BAQFtDwxOTmj18Q/company-logo_400_400/company-logo_400_400/0/1657633907178/fgv_logo?e=1756339200&v=beta&t=Dfl7ag8K3dK8LeB2f_1AvexYw3QNaFWWsTK5KBDfIhk",
                  "schoolName": "FGV - Fundação Getulio Vargas",
                  "startEndDate": {
                    "start": {
                      "month": 1,
                      "year": 2014
                    },
                    "end": {
                      "month": 1,
                      "year": 2014
                    }
                  }
                }
              ]
            },
            "skills": [
              "Bubble.io",
              "Changemaker",
              "Decisionmaker",
              "Big Picture View",
              "Team Motivation",
              "Public Speaking",
              "Storytelling",
              "Social Media Marketing",
              "Portfolio Management",
              "Assetmanagement",
              "Financial Analysis",
              "Asset Allocation",
              "FinTech",
              "Banking",
              "Leadership",
              "Investmentbank",
              "Financial Modeling",
              "Capital Markets",
              "Creative Strategy",
              "Corporate Finance",
              "Systematic Thinking",
              "Experimental Design",
              "Bloomberg",
              "WordPress",
              "Podcasting",
              "Content Marketing",
              "Business Model Innovation",
              "Email Marketing",
              "Web Design",
              "Blogging",
              "Tech Application",
              "Jack of all trades",
              "Google Apps",
              "Google Docs",
              "Trading",
              "Investment Strategies",
              "Microsoft Excel",
              "Commodity",
              "Fixed Income",
              "Equities"
            ],
            "languages": ["Deutsch", "English"],
            "certifications": {
              "certificationsCount": 1,
              "certificationHistory": [
                {
                  "name": "Trading Certificate Frankfurt Stock Exchange",
                  "organizationName": "Deutsche Börse",
                  "organizationUrl": "https://www.social.com/company/163430/",
                  "issuedDate": "Issued May 2012"
                }
              ]
            }
          },
          "company": {
            "linkedInId": "100602385",
            "name": "ScrapIn",
            "universalName": "scrapin-api",
            "linkedInUrl": "https://www.social.com/company/100602385",
            "employeeCount": 12,
            "followerCount": 1030,
            "employeeCountRange": {
              "start": 11,
              "end": 50
            },
            "websiteUrl": "https://www.scrapin.io/",
            "tagline": "Powering AI products with Live B2B Data",
            "description": "ScrapIn provides live B2B data with all necessary context you need to build a full-featured, scalable AI tool — We hide any data scraping complexity and infrastructure. Let us handle data collection and you focus on building.",
            "industry": "Software Development",
            "phone": null,
            "specialities": [],
            "headquarter": {
              "city": "Paris",
              "country": "FR",
              "postalCode": "75000",
              "geographicArea": null,
              "street1": null,
              "street2": null
            },
            "logo": "https://media.licdn.com/dms/image/v2/D4E0BAQF-Z-m2ZKv6qQ/company-logo_200_200/B4EZcRELezHcAM-/0/1748337998127/scrapin_api_logo?e=1756339200&v=beta&t=GjTJ9cgDP2iBYJCx8GxXEg8V2hZjnNBOtvXe58eiqJ0",
            "foundedOn": {
              "year": 2020
            },
            "fundingData": null,
            "backgroundUrl": "https://media.licdn.com/dms/image/v2/D4E1BAQEnSV0NjtZSXA/company-background_200/B4EZcRNJq.HYAc-/0/1748340349995/scrapin_api_cover?e=1753966800&v=beta&t=PdbNUkpicYwyp6cn9tri20MLicIO_9ASua8ZUsJm5cg"
          }
        }
      },
      "ProfileFound": {
        "summary": "Profile Found",
        "value": {
          "success": true,
          "credits_left": 90000,
          "rate_limit_left": 19000,
          "daily_rate_limit_left": 19000,
          "minute_rate_limit_left": 499,
          "next_minute_rate_limit_reset": "2024-01-15T10:31:00Z",
          "person": {
            "publicIdentifier": "michael",
            "linkedInIdentifier": "ACoAABTEFqYBfjGaiSRy5ITKaPqcBEBDdR1DrhA",
            "memberIdentifier": "248295112",
            "linkedInUrl": "https://www.social.com/in/michael",
            "firstName": "Michael",
            "lastName": "David",
            "headline": "VP Sales Scrapin.io - B2B Data for AI",
            "location": {
              "city": "London",
              "state": "England",
              "country": "United Kingdom",
              "countryCode": "GB"
            },
            "photoUrl": "https://media.licdn.com/dms/image/v2/D4E03AQG5S0X4QKtN5A/profile-displayphoto-shrink_200_200/B4EZRgQ6wZGYAY-/0/1736781836053?e=1756339200&v=beta&t=phxC3jRwoDG_zQ8QY4Iu6OduHPUM-abbrEHkJZPP9fM",
            "backgroundUrl": "https://media.licdn.com/dms/image/v2/C4E16AQGba4BhpCykTA/profile-displaybackgroundimage-shrink_350_1400/profile-displaybackgroundimage-shrink_350_1400/0/1516880563413?e=1756339200&v=beta&t=fdimLlwIIQEke73CfLZWvq0T367YxZajvtmMwynSIiU",
            "openToWork": false,
            "premium": true,
            "showVerificationBadge": true
          }
        }
      },
      "SummaryFound": {
        "summary": "Summary Found",
        "value": {
          "success": true,
          "credits_left": 90000,
          "rate_limit_left": 19000,
          "daily_rate_limit_left": 19000,
          "minute_rate_limit_left": 499,
          "next_minute_rate_limit_reset": "2024-01-15T10:31:00Z",
          "summary": "Hi there! My name is David and I'm an entrepreneur with a hacker mindset. 🏴‍☠️\n\nI am passionate about finding creative solutions to complex problems and am always looking for ways to optimize and improve processes. 🧠\n\nI am proud to have founded a company that build SaaS products to helps companies enrich their business data, and I am excited to continue driving innovation in the business world.\n\nThank you for visiting my profile and I hope to connect with you soon!"
        }
      },
      "FollowersCountFound": {
        "summary": "Followers Count Found",
        "value": {
          "success": true,
          "credits_left": 90000,
          "rate_limit_left": 19000,
          "daily_rate_limit_left": 19000,
          "minute_rate_limit_left": 499,
          "next_minute_rate_limit_reset": "2024-01-15T10:31:00Z",
          "followersCount": 646
        }
      },
      "ExperienceFound": {
        "summary": "Experience Found",
        "value": {
          "success": true,
          "credits_left": 90000,
          "rate_limit_left": 19000,
          "daily_rate_limit_left": 19000,
          "minute_rate_limit_left": 499,
          "next_minute_rate_limit_reset": "2024-01-15T10:31:00Z",
          "positions": [
            {
              "title": "VP of Sales",
              "companyName": "ScrapIn",
              "description": "B2B Data for AI +",
              "startEndDate": {
                "start": "2024-01-01T12:00:00.000Z",
                "end": null
              },
              "companyLogo": "https://media.licdn.com/dms/image/v2/D4E0BAQF-Z-m2ZKv6qQ/company-logo_200_200/B4EZcRELezHcAM-/0/1748337998127/scrapin_api_logo?e=1756339200&v=beta&t=GjTJ9cgDP2iBYJCx8GxXEg8V2hZjnNBOtvXe58eiqJ0",
              "linkedInUrl": "https://www.social.com/company/100602385/",
              "linkedInId": "100602385"
            },
            {
              "title": "Co-Founder & CEO",
              "companyName": "LukaHQ",
              "companyLocation": "Greater London, England, United Kingdom",
              "description": "AI accounting for the mid-market",
              "startEndDate": {
                "start": "2023-01-01T12:00:00.000Z",
                "end": "2023-12-01T12:00:00.000Z"
              },
              "companyLogo": "https://media.licdn.com/dms/image/v2/C4E0BAQHUbWeUxkGCfw/company-logo_400_400/company-logo_400_400/0/1677251426049?e=1756339200&v=beta&t=qQuFuWn2EsyNX-kqmN166nzxW-DxXD66cPph71e3F7g",
              "linkedInUrl": "https://www.social.com/company/93128145/",
              "linkedInId": "93128145"
            },
            {
              "title": "Consultant to COO",
              "companyName": "MoonPay",
              "companyLocation": "London Area, United Kingdom",
              "description": "Ad-hoc strategic projects in the lead-up to a $555M fundraise",
              "startEndDate": {
                "start": "2021-04-01T12:00:00.000Z",
                "end": "2021-10-01T12:00:00.000Z"
              },
              "companyLogo": "https://media.licdn.com/dms/image/v2/D560BAQHlaph_qWt7MA/company-logo_400_400/company-logo_400_400/0/1702140517386/moonpay_logo?e=1756339200&v=beta&t=leju-4Av8a6pKxzvk0pr9OOEjNWruMeDGbS_RE437ek",
              "linkedInUrl": "https://www.social.com/company/12596773/",
              "linkedInId": "12596773"
            },
            {
              "title": "Co-Founder & CEO",
              "companyName": "Telleroo",
              "companyLocation": "London",
              "description": "Leading SME payments platform for bill and payroll payments in the UK 💪",
              "startEndDate": {
                "start": "2016-04-01T12:00:00.000Z",
                "end": "2020-10-01T12:00:00.000Z"
              },
              "companyLogo": "https://media.licdn.com/dms/image/v2/D4E0BAQFg65EK-q7guw/company-logo_100_100/B4EZdkSAIuHsAQ-/0/1749734130592/telleroo_logo?e=1756339200&v=beta&t=4rKb656EJBg9K3ewqcB0_Gjt9Z2roK_8B5ABHX7Qvjg",
              "linkedInUrl": "https://www.social.com/company/10820464/",
              "linkedInId": "10820464"
            }
          ]
        }
      },
      "EducationFound": {
        "summary": "Education Found",
        "value": {
          "success": true,
          "credits_left": 90000,
          "rate_limit_left": 19000,
          "daily_rate_limit_left": 19000,
          "minute_rate_limit_left": 499,
          "next_minute_rate_limit_reset": "2024-01-15T10:31:00Z",
          "schools": [
            {
              "degreeName": "Engineering degree",
              "fieldOfStudy": "Computers, Big Data and Connected Objects",
              "description": "The IBO Major trains general IT engineers, able to master all components of information processing. To meet the changing strategic needs of the company, the future engineer will be trained in information systems, database architecture, mobility and application development.\n\nComputers, Big Data and Connected Objects.",
              "linkedInUrl": "https://www.social.com/company/15142508/",
              "schoolLogo": "https://media.licdn.com/dms/image/v2/D4E0BAQFQCZFaAoQmKw/company-logo_400_400/company-logo_400_400/0/1725378371996/esilvparis_logo?e=1755129600&v=beta&t=bPVcaWC42d3OMjQOmErZ_YBkJ5lg2EoscC6sAev0Juo",
              "schoolName": "ESILV - Ecole Supérieure d'Ingénieurs Léonard de Vinci",
              "startEndDate": {
                "start": "2017-02-01T12:00:00.000Z",
                "end": "2020-06-01T12:00:00.000Z"
              }
            },
            {
              "degreeName": "Summer School Program",
              "fieldOfStudy": "Programme d'échange international",
              "linkedInUrl": "https://www.social.com/company/15093901/",
              "schoolLogo": "https://media.licdn.com/dms/image/v2/C560BAQGhFlIwwrPy5Q/company-logo_400_400/company-logo_400_400/0/1630625706195/_logo?e=1755129600&v=beta&t=c83EX-78tGZGlXfKvJ8gjl_vQUems29kKKI2475ye4s",
              "schoolName": "Shanghai Normal University",
              "startEndDate": {
                "start": "2018-01-01T12:00:00.000Z",
                "end": "2019-01-01T12:00:00.000Z"
              }
            },
            {
              "degreeName": " Professional License Computer Systems and Database",
              "fieldOfStudy": "Analyst-Designer in Information and Decision System (ACSID)",
              "description": "This degree offers a professional training in the business of information systems engineering and decision making. Its purpose is to facilitate the professional insertion in IT fields in continuous growth.",
              "linkedInUrl": "https://www.social.com/company/15091873/",
              "schoolLogo": "https://media.licdn.com/dms/image/v2/C4D0BAQGRQuv1v-KRxQ/company-logo_400_400/company-logo_400_400/0/1630557231474/conservatoire_national_des_arts_et_mtiers_logo?e=1755129600&v=beta&t=j64Zzlo-W6LMZ3i6qthMVH6xoFxLcMtxRejnEDhObao",
              "schoolName": "Conservatoire National des Arts et Métiers",
              "startEndDate": {
                "start": "2015-01-01T12:00:00.000Z",
                "end": "2016-01-01T12:00:00.000Z"
              }
            }
          ]
        }
      },
      "SkillsFound": {
        "summary": "Skills Found",
        "value": {
          "success": true,
          "credits_left": 90000,
          "rate_limit_left": 19000,
          "daily_rate_limit_left": 19000,
          "minute_rate_limit_left": 499,
          "next_minute_rate_limit_reset": "2024-01-15T10:31:00Z",
          "skills": [
            {
              "name": "AngularJS",
              "endorsementCount": 15
            },
            {
              "name": "PHP",
              "endorsementCount": 14
            },
            {
              "name": "Java",
              "endorsementCount": 13
            },
            {
              "name": "JavaScript",
              "endorsementCount": 8
            },
            {
              "name": "SQL",
              "endorsementCount": 6
            },
            {
              "name": "HTML5"
            },
            {
              "name": "CSS"
            }
          ]
        }
      },
      "LanguagesFound": {
        "summary": "Languages Found",
        "value": {
          "success": true,
          "credits_left": 90000,
          "rate_limit_left": 19000,
          "daily_rate_limit_left": 19000,
          "minute_rate_limit_left": 499,
          "next_minute_rate_limit_reset": "2024-01-15T10:31:00Z",
          "languages": [
            {
              "language": "Chinese",
              "proficiency": "Native or bilingual proficiency"
            },
            {
              "language": "English",
              "proficiency": "Full professional proficiency"
            },
            {
              "language": "French",
              "proficiency": "Native or bilingual proficiency"
            },
            {
              "language": "Japanese",
              "proficiency": "Elementary proficiency"
            }
          ]
        }
      },
      "RecommendationsFound": {
        "summary": "Recommendations Found",
        "value": {
          "success": true,
          "credits_left": 90000,
          "rate_limit_left": 19000,
          "daily_rate_limit_left": 19000,
          "minute_rate_limit_left": 499,
          "next_minute_rate_limit_reset": "2024-01-15T10:31:00Z",
          "recommendations": [
            {
              "caption": "August 18, 2020, Michael was Tom's client",
              "description": "Michael is very talented when it comes to founding and growing tech businesses, it's very impressive what he has achieved to date. I worked with him to implement a number of outbound marketing campaigns that delivered on both new leads and revenue. He was a joy to work with, his energy and enthusiasm was infectious. I'm sure we'll work together again in the near future.",
              "authorFullname": "Tom Kelly",
              "authorUrl": "https://www.social.com/in/tomkelly25"
            },
            {
              "caption": "February 4, 2016, Catalina worked with Michael on the same team",
              "description": "Michael is an exceptionally well skilled business and sales person. His ability to make people feel good, comfortable and cared for, during the sales process, is truly remarkable. The social skills, combined with a genuine curiosity and passion for his job, also make him a great co-worker. I would personally recommend him to any growing startup who needs a truly talented biz dev guy, with a passion for all things tech. I hope to work with Michael in the future, but above all, I will be grateful for having learned from him what it is like to be highly engaging and personable as a professional.",
              "authorFullname": "Catalina B.",
              "authorUrl": "https://www.social.com/in/catalinabutnaru"
            },
            {
              "caption": "October 28, 2015, Dr. Christian worked with Michael on the same team",
              "description": "I had the pleasure to work with Michael in a team for commodity market analysis. Michael takes a holistic way of thinking but keeps an eye on specific details of a topic. He is not afraid to take unknown paths and think in new directions. Very impressive is his continuous motivation, which supports the overall team spirit. It is simply inspiring to work with such a collaborative and diligent personality. Michael is an enrichment for every employer.",
              "authorFullname": "Dr. Christian Muntz, CFA",
              "authorUrl": "https://www.social.com/in/dr-christian-muntz-cfa-b4b16b92"
            }
          ]
        }
      },
      "CertificationsFound": {
        "summary": "Certifications Found",
        "value": {
          "success": true,
          "credits_left": 90000,
          "rate_limit_left": 19000,
          "daily_rate_limit_left": 19000,
          "minute_rate_limit_left": 499,
          "next_minute_rate_limit_reset": "2024-01-15T10:31:00Z",
          "certifications": [
            {
              "name": "AWS Certified Solutions Architect",
              "organizationName": "Amazon Web Services (AWS)",
              "organizationUrl": "https://www.social.com/company/amazon-web-services/",
              "issuedDate": "Jan 2023"
            },
            {
              "name": "Google Cloud Professional Data Engineer",
              "organizationName": "Google Cloud",
              "organizationUrl": "https://www.social.com/company/google-cloud/",
              "issuedDate": "Mar 2022"
            }
          ]
        }
      },
      "VolunteeringExperiencesFound": {
        "summary": "Volunteering Experiences Found",
        "value": {
          "success": true,
          "credits_left": 90000,
          "rate_limit_left": 19000,
          "daily_rate_limit_left": 19000,
          "minute_rate_limit_left": 499,
          "next_minute_rate_limit_reset": "2024-01-15T10:31:00Z",
          "volunteeringExperiences": [
            {
              "organizationName": "Humanitarian Aid NGO",
              "role": "Volunteer",
              "cause": "Arts and Culture",
              "period": "Jan 2014 - Present · 11 yrs 7 mos"
            }
          ]
        }
      },
      "CompanyFound": {
        "summary": "Company Found",
        "value": {
          "success": true,
          "credits_left": 90000,
          "rate_limit_left": 19000,
          "daily_rate_limit_left": 19000,
          "minute_rate_limit_left": 499,
          "next_minute_rate_limit_reset": "2024-01-15T10:31:00Z",
          "company": {
            "linkedInId": "71234370",
            "name": "Data company",
            "universalName": "data-company",
            "linkedInUrl": "https://www.social.com/company/12345678",
            "employeeCount": 14,
            "followerCount": 806,
            "employeeCountRange": {
              "start": 11,
              "end": 50
            },
            "websiteUrl": "https://data.com",
            "tagline": "We Provide Data for company",
            "description": "Our mission is to provide the most accurate and reliable web data, empowering AI applications to thrive in this new era of computing.‍",
            "industry": "Software Development",
            "phone": null,
            "specialities": [
              "Lead Generation",
              "Lead Qualification",
              "Market Search",
              "Competitor analysis",
              "CRM enrichment"
            ],
            "headquarter": {
              "city": "Paris",
              "country": "FR",
              "postalCode": "7500",
              "geographicArea": "Île-de-France",
              "street1": "3, Paris street",
              "street2": "mailbox 032"
            },
            "logo": "https://media.licdn.com/dms/image/v2/D4E0BAQGj-Nfob0e55g/company-logo_400_400/company-logo_400_400/0/1702166267344/data_logo?e=1756339200&v=beta&t=99eMIcY7IX2cLI-YkJOBdfg16aCwmd7Tpk8BrSXaJHg",
            "foundedOn": {
              "year": 2020
            },
            "fundingData": null,
            "backgroundUrl": "https://media.licdn.com/dms/image/v2/D4E1BAQEldpeB551LZA/company-background_10000/company-background_10000/0/1678715803339/data_cover?e=1751288400&v=beta&t=gA-h6dpu8MRhpok9BoeVM5A0aPxGcM-9O7BqdOG8uRM"
          }
        }
      },
      "CompanyProfileExtracted": {
        "summary": "Company Profile Extracted",
        "value": {
          "success": true,
          "credits_left": 90000,
          "rate_limit_left": 19000,
          "daily_rate_limit_left": 19000,
          "minute_rate_limit_left": 499,
          "next_minute_rate_limit_reset": "2024-01-15T10:31:00Z",
          "company": {
            "linkedInId": "71234370",
            "name": "Data company",
            "universalName": "data-company",
            "linkedInUrl": "https://www.social.com/company/12345678",
            "employeeCount": 14,
            "followerCount": 806,
            "employeeCountRange": {
              "start": 11,
              "end": 50
            },
            "websiteUrl": "https://data.com",
            "tagline": "We Provide Data for companies",
            "description": "Our mission is to provide the most accurate and reliable web data, empowering AI applications to thrive in this new era of computing.",
            "industry": "Software Development",
            "phone": null,
            "specialities": [
              "Lead Generation",
              "Lead Qualification",
              "Market Search",
              "Competitor analysis",
              "CRM enrichment"
            ],
            "headquarter": {
              "city": "Paris",
              "country": "FR",
              "postalCode": "75000",
              "geographicArea": "Île-de-France",
              "street1": "3, Paris street",
              "street2": "mailbox 003"
            },
            "logo": "https://media.licdn.com/dms/image/v2/D4E0BAQGj-Nfob0e55g/company-logo_400_400/company-logo_400_400/0/1702166267344/data_logo?e=1756339200&v=beta&t=99eMIcY7IX2cLI-YkJOBdfg16aCwmd7Tpk8BrSXaJHg",
            "foundedOn": {
              "year": 2020
            },
            "fundingData": null,
            "backgroundUrl": "https://media.licdn.com/dms/image/v2/D4E1BAQEldpeB551LZA/company-background_10000/company-background_10000/0/1678715803339/data_cover?e=1751288400&v=beta&t=gA-h6dpu8MRhpok9BoeVM5A0aPxGcM-9O7BqdOG8uRM"
          }
        }
      },
      "JobListExtracted": {
        "summary": "Job List Example",
        "value": {
          "success": true,
          "credits_left": 90000,
          "rate_limit_left": 19000,
          "daily_rate_limit_left": 19000,
          "minute_rate_limit_left": 499,
          "next_minute_rate_limit_reset": "2024-01-15T10:31:00Z",
          "metadata": {
            "currentPage": 1,
            "pageNumber": 10,
            "perPage": 50,
            "total": 500
          },
          "jobs": [
            {
              "linkedinIdentifier": "4081332168",
              "title": "Software Engineer, Back-End, Data Center Network Planning",
              "companyName": "Google",
              "companyLogo": "https://media.licdn.com/dms/image/v2/C4D0BAQHiNSL4Or29cg/company-logo_400_400/company-logo_400_400/0/1631311446380?e=1742428800&v=beta&t=fRFa5F7PMhVSlTNmwx1Ow2_FkX-GdS1E8zV52c433eo",
              "location": "Sunnyvale",
              "url": "https://www.social.com/jobs/view/4081332168",
              "creationDate": null,
              "repostDate": null,
              "experienceLevel": null,
              "contractType": null
            },
            {
              "linkedinIdentifier": "4093221619",
              "title": "Data Center Mechanical/Thermal Cooling Engineer",
              "companyName": "Google",
              "companyLogo": "https://media.licdn.com/dms/image/v2/C4D0BAQHiNSL4Or29cg/company-logo_400_400/company-logo_400_400/0/1631311446380?e=1742428800&v=beta&t=fRFa5F7PMhVSlTNmwx1Ow2_FkX-GdS1E8zV52c433eo",
              "location": "Sunnyvale",
              "url": "https://www.social.com/jobs/view/4093221619",
              "creationDate": null,
              "repostDate": null,
              "experienceLevel": null,
              "contractType": null
            }
          ]
        }
      },
      "JobExtracted": {
        "summary": "Company Profile Extracted",
        "value": {
          "success": true,
          "credits_left": 90000,
          "rate_limit_left": 19000,
          "daily_rate_limit_left": 19000,
          "minute_rate_limit_left": 499,
          "next_minute_rate_limit_reset": "2024-01-15T10:31:00Z",
          "job": {
            "linkedinIdentifier": "4102642841",
            "title": "Senior Software Engineer, Full Stack, Learning & Education",
            "companyName": "Google",
            "companyLogo": "https://media.licdn.com/dms/image/v2/C4D0BAQHiNSL4Or29cg/company-logo_400_400/company-logo_400_400/0/1631311446380?e=1742428800&v=beta&t=fRFa5F7PMhVSlTNmwx1Ow2_FkX-GdS1E8zV52c433eo",
            "description": "Minimum qualifications:\n\nBachelor’s degree or equivalent practical experience. 5 years of experience with software development in one or more programming languages, and with data structures/algorithms.3 years of experience with full stack development, across back-end such as Java, Python, GO, and/or C++ codebases, and front-end experience including JavaScript and/or TypeScript, HTML, CSS or equivalent.3 years of experience testing, maintaining, and/or launching software products, and 1 year of experience with software design and architecture.\n\nPreferred qualifications:\n\nMaster's degree or PhD in Computer Science or related technical field. 1 year of experience in a technical leadership role. Experience developing accessible technologies.\n\nAbout The Job\n\nGoogle's software engineers develop the next-generation technologies that change how billions of users connect, explore, and interact with information and one another. Our products need to handle information at massive scale, and extend well beyond web search. We're looking for engineers who bring fresh ideas from all areas, including information retrieval, distributed computing, large-scale system design, networking and data storage, security, artificial intelligence, natural language processing, UI design and mobile; the list goes on and is growing every day. As a software engineer, you will work on a specific project critical to Google’s needs with opportunities to switch teams and projects as you and our fast-paced business grow and evolve. We need our engineers to be versatile, display leadership qualities and be enthusiastic to take on new problems across the full-stack as we continue to push technology forward.\n\nWith your technical expertise you will manage project priorities, deadlines, and deliverables. You will design, develop, test, deploy, maintain, and enhance software solutions.\n\nLearning is the ongoing quest for understanding, and we made it our mission more than 20 years ago to organize the world’s information to make it universally accessible and useful. The learning landscape is changing, and the Learning and Education team's mission is to help everyone in the world learn anything in the world. We provide the information, tools, and services that help people gain knowledge, fuel curiosity, and prepare for what’s next. We focus our work to add the most value for users to enable learning for school, work, and life. We believe everyone can and should have access to quality learning experiences to reach their full potential.\n\nThe US base salary range for this full-time position is $161,000-$239,000 + bonus + equity + benefits. Our salary ranges are determined by role, level, and location. The range displayed on each job posting reflects the minimum and maximum target salaries for the position across all US locations. Within the range, individual pay is determined by work location and additional factors, including job-related skills, experience, and relevant education or training. Your recruiter can share more about the specific salary range for your preferred location during the hiring process.\n\nPlease note that the compensation details listed in US role postings reflect the base salary only, and do not include bonus, equity, or benefits. Learn more about benefits at Google .\n\nResponsibilities\n\nWrite and test product or system development code. Participate in, or lead design reviews with peers and stakeholders to decide amongst available technologies. Review code developed by other developers and provide feedback to ensure best practices (e.g., style guidelines, checking code in, accuracy, testability, and efficiency). Contribute to existing documentation or educational content and adapt content based on product/program updates and user feedback. Triage product or system issues and debug/track/resolve by analyzing the sources of issues and the impact on hardware, network, or service operations and quality.\n\nGoogle is proud to be an equal opportunity workplace and is an affirmative action employer. We are committed to equal employment opportunity regardless of race, color, ancestry, religion, sex, national origin, sexual orientation, age, citizenship, marital status, disability, gender identity or Veteran status. We also consider qualified applicants regardless of criminal histories, consistent with legal requirements. See also Google's EEO Policy and EEO is the Law. If you have a disability or special need that requires accommodation, please let us know by completing our Accommodations for Applicants form .",
            "location": "Mountain View, California, United States of America",
            "url": "https://www.social.com/jobs/view/4102642841",
            "creationDate": "2024-12-18T03:13:03.000Z",
            "repostedJob": false,
            "repostDate": null,
            "applicantsCount": 15,
            "flexibility": "On-site",
            "experienceLevel": "Mid-Senior level",
            "contractType": "Full-time"
          }
        }
      },
      "ActivitiesPost": {
        "summary": "Activities Post",
        "value": {
          "success": true,
          "credits_left": 19934,
          "rate_limit_left": 19999,
          "daily_rate_limit_left": 19999,
          "minute_rate_limit_left": 499,
          "next_minute_rate_limit_reset": "2024-01-15T10:31:00Z",
          "post": {
            "activityId": "6976499964512243712",
            "text": "Congrate to the team for this amazing milestone!",
            "reactionsCount": 16,
            "commentsCount": 1,
            "activityDate": "2022-09-16T11:20:08.641Z",
            "author": {
              "authorId": "ACoAABJhN_YBN70Qb8TWu4GpxhJE1NqQ7PQEHQw",
              "authorName": "Alain Smith",
              "authorPublicIdentifier": "alainsmith",
              "authorHeadline": "Bank CEO",
              "authorImage": "https://media.licdn.com/dms/image/v2/D4E03AQFP5a_FoymQCA/profile-displayphoto-shrink_800_800/profile-displayphoto-shrink_800_800/0/1670785458261?e=1743033600&v=beta&t=ZQz5_CNMgUVUzuCTYvqUoV1xmXU4OLXun5zzvJkhktg",
              "authorUrl": "https://www.social.com/in/alainsmith"
            },
            "activityUrl": "https://www.social.com/feed/update/urn:li:activity:6976499964512243712/",
            "shareUrl": "https://www.social.com/posts/breaking-news-another-developer-turned-7293041906471596032-6sne",
            "relatedPost": {
              "text": "Spoiler: 30M€ fundraising for Geegle (10M€ equity + 20M€ debt). New step for the fintech!",
              "activityDate": "2022-06-29T14:02:12.188Z",
              "author": {
                "authorId": "11011480",
                "authorName": "geegle",
                "authorPublicIdentifier": "geegle",
                "authorHeadline": "3,923 followers",
                "authorUrl": "https://www.social.com/company/geegle/",
                "activityUrl": "https://www.social.com/feed/update/urn:li:activity:6949912435651493888/",
                "shareUrl": "https://www.social.com/posts/daily-dev-comparator-work-729304143471596032-4b0e"
              }
            }
          }
        }
      },
      "ActivitiesPosts": {
        "summary": "Activities Posts",
        "value": {
          "success": true,
          "credits_left": 19934,
          "rate_limit_left": 19999,
          "daily_rate_limit_left": 19999,
          "minute_rate_limit_left": 499,
          "next_minute_rate_limit_reset": "2024-01-15T10:31:00Z",
          "posts": [
            {
              "activityId": "6976499964512243712",
              "text": "Congrate to the team for this amazing milestone!",
              "reactionsCount": 16,
              "commentsCount": 1,
              "activityDate": "2022-09-16T11:20:08.641Z",
              "author": {
                "authorId": "ACoZZBJhN_YBN70Qb8TWu4GpxhJE1NqQ7PQEHQw",
                "authorName": "Alain Smith",
                "authorPublicIdentifier": "alainsmith",
                "authorHeadline": "Bank CEO",
                "authorImage": "https://media.licdn.com/dms/image/v2/D4E03AQFP5a_FoymQCA/profile-displayphoto-shrink_800_800/profile-displayphoto-shrink_800_800/0/1670785458261?e=1743033600&v=beta&t=ZQz5_CNMgUVUzuCTYvqUoV1xmXU4OLXun5zzvJkhktg",
                "authorUrl": "https://www.social.com/in/alainsmith"
              },
              "activityUrl": "https://www.social.com/feed/update/urn:li:activity:6976499964512243712/",
              "shareUrl": "https://www.social.com/posts/breaking-news-another-developer-turned-7293041906471596032-6sne",
              "relatedPost": {
                "text": "Spoiler: 30M€ fundraising for Geegle (10M€ equity + 20M€ debt). New step for the fintech!",
                "activityDate": "2022-06-29T14:02:12.188Z",
                "author": {
                  "authorId": "11011480",
                  "authorName": "geegle",
                  "authorPublicIdentifier": "geegle",
                  "authorHeadline": "3,923 followers",
                  "authorUrl": "https://www.social.com/company/geegle/"
                },
                "activityUrl": "https://www.social.com/feed/update/urn:li:activity:6997912435651493888/",
                "shareUrl": "https://www.social.com/posts/daily-dev-comparator-work-729304143471596032-4b0e"
              }
            },
            {
              "activityId": "6976499964512243714",
              "text": "Félicitations à toute l’équipe pour cette belle étape franchie. Le futur du financement est prometteur !",
              "reactionsCount": 42,
              "commentsCount": 5,
              "activityDate": "2022-09-20T14:15:32.111Z",
              "author": {
                "authorId": "ACoAABXhN_ZC1234qW12XTU4F3NpYQ7PQRFGHS",
                "authorName": "Sophie Dubois",
                "authorPublicIdentifier": "sophiedubois",
                "authorHeadline": "Fintech Enthusiast | Product Manager",
                "authorImage": "https://example.com/images/sophie.jpg",
                "authorUrl": "https://www.social.com/in/sophiedubois"
              },
              "activityUrl": "https://www.social.com/feed/update/urn:li:activity:6976499964512243714/",
              "relatedPost": {
                "text": "Merci à nos investisseurs pour leur confiance. Nous sommes ravis de pouvoir développer des solutions plus innovantes et accessibles.",
                "activityDate": "2022-07-01T10:30:00.000Z",
                "author": {
                  "authorId": "123456789",
                  "authorName": "InnovFin",
                  "authorPublicIdentifier": "innovfin",
                  "authorHeadline": "1,200 followers",
                  "authorUrl": "https://www.social.com/company/innovfin/"
                },
                "activityUrl": "https://www.social.com/feed/update/urn:li:activity:6947912435651493890/",
                "shareUrl": "https://www.social.com/posts/daily-dev-comparator-work-729304143471596032-4b0e"
              }
            }
          ]
        }
      },
      "ActivitiesComment": {
        "summary": "Activities Comments",
        "value": {
          "success": true,
          "credits_left": 19934,
          "rate_limit_left": 19999,
          "daily_rate_limit_left": 19999,
          "minute_rate_limit_left": 499,
          "next_minute_rate_limit_reset": "2024-01-15T10:31:00Z",
          "metadata": {
            "currentPage": 1,
            "pageNumber": 10,
            "perPage": 50,
            "total": 500
          },
          "comments": [
            {
              "text": "Congrate to the team for this amazing milestone!",
              "reactionsCount": 2,
              "commentsCount": 1,
              "activityDate": 1675339386599,
              "author": {
                "authorId": "ACZxACJrg3QBOHYEx_zMaj2sF7IgUFOpF5LKkss",
                "authorName": "Julien Smith",
                "authorPublicIdentifier": "julien-smith"
              },
              "activityUrl": "https://www.social.com/feed/update/urn:li:activity:7044876553418222512?commentUrn=urn%3Ali%3Acomment%3A%28activity%3A7026876553418432512%2C7026882690565963777%29&dashCommentUrn=urn%3Ali%3Afsd_comment%3A%287026882690565963777%2Curn%3Ali%3Aactivity%3A7026876553418432512%29"
            },
            {
              "text": "Bravo à toute l'équipe pour cette étape incroyable !",
              "reactionsCount": 5,
              "commentsCount": 0,
              "activityDate": 1675400000000,
              "author": {
                "authorId": "ACZxACJrg3QBOHYEx_zMaj2sF7IgUFOpF5LKkss",
                "authorName": "Claire Dubois",
                "authorPublicIdentifier": "claire-dubois-fintech"
              },
              "activityUrl": "https://www.social.com/feed/update/urn:li:activity:7044876553418222512?commentUrn=urn%3Ali%3Acomment%3A%28activity%3A7026876553418432512%2C7026899999999999999%29&dashCommentUrn=urn%3Ali%3Afsd_comment%3A%287026899999999999999%2Curn%3Ali%3Aactivity%3A7026876553418432512%29"
            }
          ]
        }
      },
      "ActivitiesComments": {
        "summary": "Activities Comments",
        "value": {
          "success": true,
          "credits_left": 19934,
          "rate_limit_left": 19999,
          "daily_rate_limit_left": 19999,
          "minute_rate_limit_left": 499,
          "next_minute_rate_limit_reset": "2024-01-15T10:31:00Z",
          "comments": [
            {
              "text": "This is an excellent opportunity!",
              "reactionsCount": 12,
              "commentsCount": 4,
              "activityDate": "2025-01-15T10:20:30.000Z",
              "author": {
                "authorId": "ACoAACZKXYMBEJLkU3PzN_XDp9YAUEZTJ9VBdQ1",
                "authorName": "Marie Dupont",
                "authorPublicIdentifier": "marie-dupont"
              },
              "activityUrl": "https://www.social.com/feed/update/urn:li:activity:7283548161238761231",
              "relatedPost": {
                "activityId": "7283548161238761231",
                "text": "We are launching a new product that will revolutionize the market! #Innovation",
                "reactionsCount": 20,
                "commentsCount": 5,
                "activityDate": "2025-01-14T14:10:00.000Z",
                "author": {
                  "authorId": "ACoAACYKLRQBOLOPQU9WV7F6DpTXAULWP5CDEF9",
                  "authorName": "John Smith",
                  "authorPublicIdentifier": "john-smith"
                },
                "activityUrl": "https://www.social.com/posts/john-smith_new-product-launch-activity-7283548161238761231",
                "shareUrl": "https://www.social.com/posts/daily-dev-comparator-work-729304143471596032-4b0e",
                "relatedPost": null
              }
            },
            {
              "text": "Good luck to the team on this ambitious project!",
              "reactionsCount": 25,
              "commentsCount": 2,
              "activityDate": "2025-01-12T18:45:00.000Z",
              "author": {
                "authorId": "ACoAAHJLKXTGBYOEMZ9CQPTWVOATSFYIJ8CVZW2",
                "authorName": "Lucas Morel",
                "authorPublicIdentifier": "lucas-morel"
              },
              "activityUrl": "https://www.social.com/feed/update/urn:li:activity:7285567894563217890",
              "relatedPost": {
                "activityId": "7285567894563217890",
                "text": "We are looking for experts to join our upcoming tech hackathon. Sign up now!",
                "reactionsCount": 40,
                "commentsCount": 15,
                "activityDate": "2025-01-10T15:00:00.000Z",
                "author": {
                  "authorId": "ACoAAKMZLYTBOLQQPV6TV9JDLPVZAWCXY5DGEFT",
                  "authorName": "Nina Brown",
                  "authorPublicIdentifier": "nina-brown"
                },
                "activityUrl": "https://www.social.com/posts/nina-brown_hackathon-tech-activity-7285567894563217890",
                "shareUrl": "https://www.social.com/posts/daily-dev-comparator-work-729304143471596032-4b0e",
                "relatedPost": null
              }
            }
          ]
        }
      },
      "ActivitiesReaction": {
        "summary": "Activities Reactions",
        "value": {
          "success": true,
          "credits_left": 19934,
          "rate_limit_left": 19999,
          "daily_rate_limit_left": 19999,
          "minute_rate_limit_left": 499,
          "next_minute_rate_limit_reset": "2024-01-15T10:31:00Z",
          "metadata": {
            "currentPage": 1,
            "pageNumber": 10,
            "perPage": 50,
            "total": 500
          },
          "reactions": [
            {
              "type": "LIKE",
              "author": {
                "authorId": "XCoEECH1JL4BEFTG8OBXXuUTIOatyKpCH9AIGE0",
                "authorName": "Stefan Smith",
                "authorUrl": "https://www.social.com/in/XCoEECH1JL4BEFTG8OBXXuUTIOatyKpCH9AIGE0"
              }
            },
            {
              "type": "LIKE",
              "author": {
                "authorId": "XCoEECH1JL4BEFTG8OBXXuUTIOatyKpCH9AIGE0",
                "authorName": "John Doe",
                "authorUrl": "https://www.social.com/in/XCoEECH1JL4BEFTG8OBXXuUTIOatyKpCH9AIGE0"
              }
            }
          ]
        }
      },
      "ActivitiesReactions": {
        "summary": "Activities Reactions",
        "value": {
          "success": true,
          "credits_left": 19934,
          "rate_limit_left": 19999,
          "daily_rate_limit_left": 19999,
          "minute_rate_limit_left": 499,
          "next_minute_rate_limit_reset": "2024-01-15T10:31:00Z",
          "reactions": [
            {
              "type": "LIKE",
              "author": {
                "authorId": "ACoAAZ12345EFGHIJ6LMNO7PQRS8TU9VWXY",
                "authorName": "Emily Johnson"
              },
              "relatedPost": {
                "activityId": "7283749210384982025",
                "text": "🌟 Excited to announce that our team has launched a new feature for better data visualization! 🚀\n\n👉 A huge step forward for empowering businesses to make data-driven decisions with ease.\n\n📊 Explore more details here:",
                "reactionsCount": 102,
                "commentsCount": 15,
                "activityDate": "2024-11-10T10:45:00.000Z",
                "author": {
                  "authorId": "ACoAABc98765FGHIJKLMN4OPQRS3TUVWXY2Z",
                  "authorName": "Alex Parker",
                  "authorPublicIdentifier": "alex-parker-data"
                },
                "activityUrl": "https://www.social.com/posts/alex-parker_data-visualization-launch-activity-7283749210384982025",
                "shareUrl": "https://www.social.com/posts/daily-dev-comparator-work-729304143471596032-4b0e",
                "relatedPost": null
              }
            },
            {
              "type": "LIKE",
              "author": {
                "authorId": "ACoAAD12345JKL6789MNOPQRST0UVWXY",
                "authorName": "John Smith"
              },
              "relatedPost": {
                "activityId": "7289381238402947552",
                "text": "🎉 Join us in celebrating the 10th anniversary of our startup! A decade of innovation and growth wouldn't have been possible without our amazing team and supporters.\n\n🎂 Thank you for being part of our journey!",
                "reactionsCount": 250,
                "commentsCount": 35,
                "activityDate": "2024-12-01T14:20:00.000Z",
                "author": {
                  "authorId": "ACoAABd12345JKLMN6OPQRSTUV7WXYZ890",
                  "authorName": "Sophia Taylor",
                  "authorPublicIdentifier": "sophia-taylor"
                },
                "activityUrl": "https://www.social.com/posts/sophia-taylor_10th-anniversary-celebration-activity-7289381238402947552",
                "shareUrl": "https://www.social.com/posts/daily-dev-comparator-work-729304143471596032-4b0e",
                "relatedPost": null
              }
            }
          ]
        }
      },
      "ActivitiesRepost": {
        "summary": "Activities Reactions",
        "value": {
          "success": true,
          "credits_left": 19934,
          "rate_limit_left": 19999,
          "daily_rate_limit_left": 19999,
          "minute_rate_limit_left": 499,
          "next_minute_rate_limit_reset": "2024-01-15T10:31:00Z",
          "metadata": {
            "currentPage": 1,
            "pageNumber": 10,
            "perPage": 50,
            "total": 500
          },
          "reposts": [
            {
              "activityDate": "2025-01-20T17:34:18.194Z",
              "author": {
                "authorId": "ACoEEErSbPQBkUq8jPzOZ-apr7bXDd04Q4-hIWX",
                "authorName": "John Doe",
                "authorPublicIdentifier": "john-doe-192b934"
              },
              "activityUrl": "https://www.social.com/feed/update/urn:li:activity:7284160525581148869/"
            },
            {
              "activityDate": "2025-01-20T17:08:27.433Z",
              "author": {
                "authorId": "ACoEEErSbPQBkUq8jPzOZ-apr7bXDd04Q4-hIWX",
                "authorName": "Lucas Smith",
                "authorPublicIdentifier": "lucas-smith-192b934"
              },
              "activityUrl": "https://www.social.com/feed/update/urn:li:activity:7284160525581148869/"
            }
          ]
        }
      },
      "CompanyActivitiesPosts": {
        "summary": "Activities Posts",
        "value": {
          "success": true,
          "credits_left": 19934,
          "rate_limit_left": 19999,
          "daily_rate_limit_left": 19999,
          "minute_rate_limit_left": 499,
          "next_minute_rate_limit_reset": "2024-01-15T10:31:00Z",
          "metadata": {
            "currentPage": 1,
            "pageNumber": 10,
            "perPage": 50,
            "total": 500
          },
          "posts": [
            {
              "activityId": "6976499964512243712",
              "text": "Congrate to the team for this amazing milestone!",
              "reactionsCount": 16,
              "commentsCount": 1,
              "activityDate": "2022-09-16T11:20:08.641Z",
              "author": {
                "authorId": "ACoZZBJhN_YBN70Qb8TWu4GpxhJE1NqQ7PQEHQw",
                "authorName": "Alain Smith",
                "authorPublicIdentifier": "alainsmith",
                "authorHeadline": "Bank CEO",
                "authorImage": "https://media.licdn.com/dms/image/v2/D4E03AQFP5a_FoymQCA/profile-displayphoto-shrink_800_800/profile-displayphoto-shrink_800_800/0/1670785458261?e=1743033600&v=beta&t=ZQz5_CNMgUVUzuCTYvqUoV1xmXU4OLXun5zzvJkhktg",
                "authorUrl": "https://www.social.com/in/alainsmith"
              },
              "activityUrl": "https://www.social.com/feed/update/urn:li:activity:6976499964512243712/",
              "shareUrl": "https://www.social.com/posts/breaking-news-another-developer-turned-7293041906471596032-6sne",
              "relatedPost": {
                "text": "Spoiler: 30M€ fundraising for Geegle (10M€ equity + 20M€ debt). New step for the fintech!",
                "activityDate": "2022-06-29T14:02:12.188Z",
                "author": {
                  "authorId": "11011480",
                  "authorName": "geegle",
                  "authorPublicIdentifier": "geegle",
                  "authorHeadline": "3,923 followers",
                  "authorUrl": "https://www.social.com/company/geegle/"
                },
                "activityUrl": "https://www.social.com/feed/update/urn:li:activity:6997912435651493888/",
                "shareUrl": "https://www.social.com/posts/daily-dev-comparator-work-729304143471596032-4b0e"
              }
            },
            {
              "activityId": "6976499964512243714",
              "text": "Félicitations à toute l’équipe pour cette belle étape franchie. Le futur du financement est prometteur !",
              "reactionsCount": 42,
              "commentsCount": 5,
              "activityDate": "2022-09-20T14:15:32.111Z",
              "author": {
                "authorId": "ACoAABXhN_ZC1234qW12XTU4F3NpYQ7PQRFGHS",
                "authorName": "Sophie Dubois",
                "authorPublicIdentifier": "sophiedubois",
                "authorHeadline": "Fintech Enthusiast | Product Manager",
                "authorImage": "https://example.com/images/sophie.jpg",
                "authorUrl": "https://www.social.com/in/sophiedubois"
              },
              "activityUrl": "https://www.social.com/feed/update/urn:li:activity:6976499964512243714/",
              "relatedPost": {
                "text": "Merci à nos investisseurs pour leur confiance. Nous sommes ravis de pouvoir développer des solutions plus innovantes et accessibles.",
                "activityDate": "2022-07-01T10:30:00.000Z",
                "author": {
                  "authorId": "123456789",
                  "authorName": "InnovFin",
                  "authorPublicIdentifier": "innovfin",
                  "authorHeadline": "1,200 followers",
                  "authorUrl": "https://www.social.com/company/innovfin/"
                },
                "activityUrl": "https://www.social.com/feed/update/urn:li:activity:6947912435651493890/",
                "shareUrl": "https://www.social.com/posts/daily-dev-comparator-work-729304143471596032-4b0e"
              }
            }
          ]
        }
      },
      "QuotasFound": {
        "summary": "Quotas Found",
        "value": {
          "status": "success",
          "data": { "credits_left": 90000, "rate_limit_left": 19000 }
        }
      },
      "NoApiKey": {
        "summary": "No Api Key",
        "value": {
          "success": false,
          "title": "An error has occurred 🚒",
          "msg": "The API Key is missing"
        }
      },
      "InvalidEmail": {
        "summary": "Invalid Email",
        "value": {
          "success": false,
          "title": "An error has occurred 🚒",
          "msg": "The email has the wrong format"
        }
      },
      "MissingEmail": {
        "summary": "Missing Email",
        "value": {
          "success": false,
          "title": "An error has occurred 🚒",
          "msg": "The email is missing"
        }
      },
      "InvalidApiKey": {
        "summary": "Invalid Api Key",
        "value": {
          "success": false,
          "title": "Unauthorized",
          "msg": "API Key is invalid"
        }
      },
      "PaymentRequired": {
        "summary": "Payment Required",
        "value": {
          "success": false,
          "title": "You don't have enough credits on your account 💰",
          "msg": "You have to upgrade to continue"
        }
      },
      "PageNotFound": {
        "summary": "Data Not Found",
        "value": {
          "success": false,
          "title": "Not Found",
          "msg": "No data found"
        }
      },
      "ServerError": {
        "summary": "Server Error",
        "value": {
          "success": false,
          "title": "Internal Server Error",
          "msg": "An internal server error has occurred"
        }
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/ErrorResponseSchema" },
            "examples": {
              "NoApiKey": { "$ref": "#/components/examples/NoApiKey" },
              "MissingEmail": { "$ref": "#/components/examples/MissingEmail" },
              "InvalidEmail": { "$ref": "#/components/examples/InvalidEmail" }
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/ErrorResponseSchema" },
            "examples": {
              "InvalidApiKey": { "$ref": "#/components/examples/InvalidApiKey" }
            }
          }
        }
      },
      "PaymentRequired": {
        "description": "Insufficient Account Balance",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/ErrorResponseSchema" },
            "examples": {
              "PaymentRequired": {
                "$ref": "#/components/examples/PaymentRequired"
              }
            }
          }
        }
      },
      "NotFound": {
        "description": "Data Not Found",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/ErrorResponseSchema" },
            "examples": {
              "PageNotFound": { "$ref": "#/components/examples/PageNotFound" }
            }
          }
        }
      },
      "ServerError": {
        "description": "Server Error",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/ErrorResponseSchema" },
            "examples": {
              "ServerError": { "$ref": "#/components/examples/ServerError" }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "apiKey": {
        "name": "apikey",
        "in": "query",
        "type": "apiKey",
        "description": "This required parameter is a string. It represents the APIKEY obtained from the developer dashboard. \nYou must use it in the query string of your request as ?apiKey=YOUR_API_KEY or in the headers as x-api-key: YOUR_API_KEY"
      }
    }
  }
}
